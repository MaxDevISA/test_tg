package main

import (
	"context"
	"log"
	"net/http"
	"os"
	"os/signal"
	"syscall"
	"time"

	"p2pTG-crypto-exchange/internal/handler"
	"p2pTG-crypto-exchange/internal/repository"
	"p2pTG-crypto-exchange/internal/service"

	"github.com/gorilla/mux"
	"github.com/joho/godotenv"
	_ "github.com/lib/pq" // PostgreSQL –¥—Ä–∞–π–≤–µ—Ä
)

// main —è–≤–ª—è–µ—Ç—Å—è —Ç–æ—á–∫–æ–π –≤—Ö–æ–¥–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ P2P –∫—Ä–∏–ø—Ç–æ–±–∏—Ä–∂–∏
// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç HTTP —Å–µ—Ä–≤–µ—Ä
func main() {
	// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞ (–µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
	// –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±–µ–∑ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏
	if err := godotenv.Load(); err != nil {
		log.Println("[WARN] –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã")
	}

	// –ü–æ–ª—É—á–∞–µ–º –ø–æ—Ä—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
	// –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–æ—Ä—Ç 8080
	port := os.Getenv("PORT")
	if port == "" {
		port = "8080"
		log.Println("[INFO] –ü–æ—Ä—Ç –Ω–µ –∑–∞–¥–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–æ—Ä—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 8080")
	}

	// –ü–æ–ª—É—á–∞–µ–º URL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö PostgreSQL
	databaseURL := os.Getenv("DATABASE_URL")

	// –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è JSON —Ñ–∞–π–ª–æ–≤ (—Ä–µ–∑–µ—Ä–≤–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç)
	dataDir := os.Getenv("DATA_DIR")
	if dataDir == "" {
		// –ü–∞–ø–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
		dataDir = "data"
		log.Println("[INFO] DATA_DIR –Ω–µ –∑–∞–¥–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–∞–ø–∫–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: data")
	}

	// –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω Telegram –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
	telegramToken := os.Getenv("TELEGRAM_BOT_TOKEN")
	if telegramToken == "" {
		log.Fatal("[ERROR] TELEGRAM_BOT_TOKEN –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–µ –∑–∞–¥–∞–Ω–∞")
	}

	// –ü–æ–ª—É—á–∞–µ–º ID –∑–∞–∫—Ä—ã—Ç–æ–≥–æ —á–∞—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
	chatID := os.Getenv("TELEGRAM_CHAT_ID")
	if chatID == "" {
		log.Fatal("[ERROR] TELEGRAM_CHAT_ID –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–µ –∑–∞–¥–∞–Ω–∞")
	}

	// –ü–æ–ª—É—á–∞–µ–º URL –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
	webAppURL := os.Getenv("TELEGRAM_WEBAPP_URL")
	if webAppURL == "" {
		webAppURL = "https://localhost:" + port // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
		log.Printf("[INFO] TELEGRAM_WEBAPP_URL –Ω–µ –∑–∞–¥–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: %s", webAppURL)
	}

	// –ü–æ–ª—É—á–∞–µ–º URL –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Å—Å—ã–ª–æ–∫ –≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è—Ö (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
	botURL := os.Getenv("TELEGRAM_BOT_URL")
	if botURL == "" {
		// –ï—Å–ª–∏ –Ω–µ –∑–∞–¥–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ Telegram (–±–µ–∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –±–æ—Ç–∞)
		botURL = "https://t.me" // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—Ä–æ—Å—Ç–æ —Å—Å—ã–ª–∫–∞ –Ω–∞ Telegram
		log.Printf("[INFO] TELEGRAM_BOT_URL –Ω–µ –∑–∞–¥–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: %s", botURL)
	}

	// –ü–æ–ª—É—á–∞–µ–º ID –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ —á–∞—Ç–∞ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
	groupChatID := os.Getenv("TELEGRAM_GROUP_CHAT_ID")
	if groupChatID != "" {
		log.Printf("[INFO] –ì—Ä—É–ø–ø–æ–≤—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –≤ —á–∞—Ç ID: %s", groupChatID)
	} else {
		log.Println("[INFO] TELEGRAM_GROUP_CHAT_ID –Ω–µ –∑–∞–¥–∞–Ω, –≥—Ä—É–ø–ø–æ–≤—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã")
	}

	// –ü–æ–ª—É—á–∞–µ–º ID —Ç–µ–º—ã –≤ –≥—Ä—É–ø–ø–æ–≤–æ–º —á–∞—Ç–µ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
	groupTopicID := os.Getenv("TELEGRAM_GROUP_TOPIC_ID")
	if groupTopicID != "" && groupChatID != "" {
		log.Printf("[INFO] –ì—Ä—É–ø–ø–æ–≤—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –≤ —Ç–µ–º—É ID: %s", groupTopicID)
	}

	log.Println("[INFO] –ó–∞–ø—É—Å–∫ P2P –∫—Ä–∏–ø—Ç–æ–±–∏—Ä–∂–∏...")
	log.Printf("[INFO] –ü–æ—Ä—Ç —Å–µ—Ä–≤–µ—Ä–∞: %s", port)
	log.Printf("[INFO] URL –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: %s", webAppURL)

	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏
	var repo repository.RepositoryInterface
	var err error

	if databaseURL != "" {
		// –ò—Å–ø–æ–ª—å–∑—É–µ–º PostgreSQL –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
		log.Printf("[INFO] üêò –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
		repo, err = repository.NewRepository(databaseURL)
		if err != nil {
			log.Fatalf("[ERROR] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ PostgreSQL: %v", err)
		}
		log.Println("[INFO] ‚úÖ PostgreSQL —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
		log.Println("[INFO] üéØ –í—Å–µ –¥–∞–Ω–Ω—ã–µ —Ç–µ–ø–µ—Ä—å —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!")
		log.Println("[INFO] üîÑ –ü—Ä–∏ –¥–µ–ø–ª–æ—è—Ö –¥–∞–Ω–Ω—ã–µ –ù–ï –ë–£–î–£–¢ –ø—Ä–æ–ø–∞–¥–∞—Ç—å!")
	} else {
		// –†–µ–∑–µ—Ä–≤–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç - —Ñ–∞–π–ª–æ–≤–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
		log.Printf("[WARN] DATABASE_URL –Ω–µ –∑–∞–¥–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∞–π–ª–æ–≤–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ: %s", dataDir)
		log.Printf("[WARN] ‚ö†Ô∏è  –ü—Ä–∏ –¥–µ–ø–ª–æ—è—Ö –¥–∞–Ω–Ω—ã–µ –ë–£–î–£–¢ –ø—Ä–æ–ø–∞–¥–∞—Ç—å!")
		repo, err = repository.NewFileRepository(dataDir)
		if err != nil {
			log.Fatalf("[ERROR] –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª–æ–≤—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: %v", err)
		}
		log.Println("[INFO] –§–∞–π–ª–æ–≤–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ JSON –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–æ")
	}
	defer repo.Close() // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã

	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–ª–æ–π —Å–µ—Ä–≤–∏—Å–æ–≤ –¥–ª—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∏
	// –°–µ—Ä–≤–∏—Å—ã —Å–æ–¥–µ—Ä–∂–∞—Ç –≤—Å—é –ª–æ–≥–∏–∫—É —Ä–∞–±–æ—Ç—ã —Å –∑–∞—è–≤–∫–∞–º–∏, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ –æ—Ç–∑—ã–≤–∞–º–∏
	svc := service.NewServiceWithGroup(repo, telegramToken, chatID, webAppURL, groupChatID, groupTopicID, botURL)
	log.Println("[INFO] –°–µ—Ä–≤–∏—Å—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
	log.Println("[INFO] –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≥–æ—Ç–æ–≤–∞ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π —É—á–∞—Å—Ç–Ω–∏–∫–∞–º —Å–¥–µ–ª–æ–∫")

	// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—á–∏—Å—Ç–∫–∏ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
	// –û–Ω –±—É–¥–µ—Ç –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –∏ —É–¥–∞–ª—è—Ç—å —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –∑–∞—è–≤–∫–∏ –∏ —Å–¥–µ–ª–∫–∏
	svc.StartCleanupService()
	log.Println("[INFO] üßπ –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—á–∏—Å—Ç–∫–∏ –∞–∫—Ç–∏–≤–Ω–∞ (–∑–∞—è–≤–∫–∏: 7 –¥–Ω–µ–π, —Å–¥–µ–ª–∫–∏: 1 –¥–µ–Ω—å)")

	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–ª–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ HTTP –∑–∞–ø—Ä–æ—Å–æ–≤
	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø—Ä–∏–Ω–∏–º–∞—é—Ç HTTP –∑–∞–ø—Ä–æ—Å—ã –∏ –≤—ã–∑—ã–≤–∞—é—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Å–µ—Ä–≤–∏—Å—ã
	handlers := handler.NewHandler(svc)
	log.Println("[INFO] –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ HTTP –∑–∞–ø—Ä–æ—Å–æ–≤ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")

	// –°–æ–∑–¥–∞–µ–º HTTP –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º gorilla/mux
	// –ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∫–∞–∫–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–∑—ã–≤–∞—Ç—å –¥–ª—è –∫–∞–∂–¥–æ–≥–æ URL
	router := mux.NewRouter()

	// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤—Å–µ –º–∞—Ä—à—Ä—É—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
	handlers.RegisterRoutes(router)
	log.Println("[INFO] HTTP –º–∞—Ä—à—Ä—É—Ç—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")

	// –ó–∞–ø—É—Å–∫–∞–µ–º HTTP —Å–µ—Ä–≤–µ—Ä –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–º –ø–æ—Ä—Ç—É
	// –°–æ–∑–¥–∞–µ–º HTTP —Å–µ—Ä–≤–µ—Ä —Å graceful shutdown
	server := &http.Server{
		Addr:    ":" + port,
		Handler: router,
	}

	// –°–µ—Ä–≤–µ—Ä –±—É–¥–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –≤—Å–µ –≤—Ö–æ–¥—è—â–∏–µ HTTP –∑–∞–ø—Ä–æ—Å—ã
	log.Printf("[INFO] –ó–∞–ø—É—Å–∫ HTTP —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É %s", port)
	log.Printf("[INFO] –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:%s", port)

	// –°–æ–∑–¥–∞–µ–º –∫–∞–Ω–∞–ª –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤
	quit := make(chan os.Signal, 1)
	signal.Notify(quit, syscall.SIGINT, syscall.SIGTERM)

	// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π –≥–æ—Ä—É—Ç–∏–Ω–µ
	go func() {
		if err := server.ListenAndServe(); err != nil && err != http.ErrServerClosed {
			log.Fatalf("[ERROR] –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å HTTP —Å–µ—Ä–≤–µ—Ä: %v", err)
		}
	}()

	log.Println("[INFO] ‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω! –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")

	// –û–∂–∏–¥–∞–µ–º —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
	<-quit
	log.Println("[INFO] üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏, –Ω–∞—á–∏–Ω–∞–µ–º graceful shutdown...")

	// –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—á–∏—Å—Ç–∫–∏
	svc.StopCleanupService()

	// –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å —Ç–∞–π–º–∞—É—Ç–æ–º –¥–ª—è graceful shutdown
	ctx, cancel := context.WithTimeout(context.Background(), 5*time.Second)
	defer cancel()

	// Graceful shutdown HTTP —Å–µ—Ä–≤–µ—Ä–∞
	if err := server.Shutdown(ctx); err != nil {
		log.Printf("[ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ —Å–µ—Ä–≤–µ—Ä–∞: %v", err)
	}

	log.Println("[INFO] ‚úÖ –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
}
