
// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è P2P –∫—Ä–∏–ø—Ç–æ–±–∏—Ä–∂–∏
let currentUser = null;
let currentInternalUserId = null; // –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–∏—Å—Ç–µ–º–µ
let tg = window.Telegram?.WebApp;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
function initTelegramWebApp() {
    if (tg) {
        tg.ready();
        tg.expand();
        tg.disableVerticalSwipes();
        
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram
        if (tg.initDataUnsafe?.user) {
            currentUser = tg.initDataUnsafe.user;
            document.querySelector('.user-info').textContent = 
                'üë§ ' + currentUser.first_name + ' ' + (currentUser.last_name || '');
            
            // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –≤—Ö–æ–¥–µ
            authenticateUser();
        } else {
            showError('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram');
            return;
        }
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ü–≤–µ—Ç–æ–≤—É—é —Å—Ö–µ–º—É Telegram
        document.body.style.backgroundColor = tg.backgroundColor || '#ffffff';
        
        console.log('[INFO] Telegram WebApp –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω', currentUser);
    } else {
        console.warn('[WARN] Telegram WebApp API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –¥–µ–º–æ —Ä–µ–∂–∏–º');
        document.querySelector('.user-info').textContent = 'üë§ –î–µ–º–æ —Ä–µ–∂–∏–º';
        // –í –¥–µ–º–æ —Ä–µ–∂–∏–º–µ —Å–æ–∑–¥–∞–µ–º —Ñ–µ–π–∫–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        currentUser = {
            id: 123456789,
            first_name: '–¢–µ—Å—Ç–æ–≤—ã–π',
            last_name: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
            username: 'testuser'
        };
    }
}

// –ù–∞–≤–∏–≥–∞—Ü–∏—è –º–µ–∂–¥—É —Ä–∞–∑–¥–µ–ª–∞–º–∏
function initNavigation() {
    const navItems = document.querySelectorAll('.nav-item');
    const views = document.querySelectorAll('.view');
    
    navItems.forEach(item => {
        item.addEventListener('click', () => {
            const viewName = item.dataset.view;
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é
            navItems.forEach(nav => nav.classList.remove('active'));
            item.classList.add('active');
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª
            views.forEach(view => {
                if (view.id === viewName + 'View') {
                    view.style.display = 'block';
                    view.classList.remove('hidden');
                } else {
                    view.style.display = 'none';
                    view.classList.add('hidden');
                }
            });
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞
            if (viewName === 'orders') {
                loadOrders();
            } else if (viewName === 'my-orders') {
                loadMyOrders();
            } else if (viewName === 'responses') {
                loadResponses();
                initResponseTabs();
            } else if (viewName === 'profile') {
                loadProfile();
            }
        });
    });
}

// –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
function initModal() {
    const modal = document.getElementById('createOrderModal');
    const createBtn = document.getElementById('createOrderBtn');
    const closeBtn = document.querySelector('.modal-close');
    const form = document.getElementById('createOrderForm');
    
    createBtn.addEventListener('click', () => {
        modal.classList.add('show');
    });
    
    closeBtn.addEventListener('click', () => {
        modal.classList.remove('show');
    });
    
    modal.addEventListener('click', (e) => {
        if (e.target === modal) {
            modal.classList.remove('show');
        }
    });
    
    form.addEventListener('submit', handleCreateOrder);
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏
async function handleCreateOrder(e) {
    e.preventDefault();
    
    if (!currentUser) {
        showError('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
        return;
    }
    
    const formData = new FormData(e.target);
    const paymentMethods = [];
    
    // –°–æ–±–∏—Ä–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã
    formData.getAll('payment_methods').forEach(method => {
        paymentMethods.push(method);
    });
    
    const orderData = {
        type: formData.get('type'),
        cryptocurrency: formData.get('cryptocurrency'),
        fiat_currency: formData.get('fiat_currency'),
        amount: parseFloat(formData.get('amount')),
        price: parseFloat(formData.get('price')),
        payment_methods: paymentMethods,
        description: formData.get('description') || '',
        auto_match: formData.has('auto_match')
    };
    
    try {
        const response = await fetch('/api/v1/orders', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-Telegram-User-ID': currentUser.id.toString()
            },
            body: JSON.stringify(orderData)
        });
        
        const result = await response.json();
        
        // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        console.log('[DEBUG] –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏:', result);
        
        if (result.success) {
            console.log('[DEBUG] –ó–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫...');
            showSuccess('–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!');
            document.getElementById('createOrderModal').classList.remove('show');
            e.target.reset();
            loadOrders(); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫
        } else {
            showError(result.error || '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏');
        }
    } catch (error) {
        console.error('[ERROR] –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏:', error);
        showError('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞—è–≤–æ–∫
async function loadOrders() {
    const content = document.getElementById('ordersContent');
    content.innerHTML = '<div class="loading"><div class="spinner"></div><p>–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞—è–≤–æ–∫...</p></div>';
    
    try {
        // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–ª—å—Ç—Ä status=active —á—Ç–æ–±—ã –ø–æ–∫–∞–∑—ã–≤–∞–ª–∏—Å—å —Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞—è–≤–∫–∏
        const response = await fetch('/api/v1/orders?status=active');
        const result = await response.json();
        
        // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        console.log('[DEBUG] –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É –∑–∞—è–≤–æ–∫:', result);
        
        if (result.success) {
            console.log('[DEBUG] –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞—è–≤–æ–∫:', (result.orders || []).length);
            displayOrders(result.orders || []);
        } else {
            console.log('[DEBUG] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞—è–≤–æ–∫:', result.error);
            content.innerHTML = '<p class="text-center text-muted">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞—è–≤–æ–∫</p>';
        }
    } catch (error) {
        console.error('[ERROR] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞—è–≤–æ–∫:', error);
        content.innerHTML = '<p class="text-center text-muted">–û—à–∏–±–∫–∞ —Å–µ—Ç–∏</p>';
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞—è–≤–æ–∫
function displayOrders(orders) {
    const content = document.getElementById('ordersContent');
    
    // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    console.log('[DEBUG] –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞—è–≤–æ–∫:', orders);
    
    if (orders.length === 0) {
        console.log('[DEBUG] –ú–∞—Å—Å–∏–≤ –∑–∞—è–≤–æ–∫ –ø—É—Å—Ç');
        content.innerHTML = '<p class="text-center text-muted">–ó–∞—è–≤–æ–∫ –ø–æ–∫–∞ –Ω–µ—Ç</p>';
        return;
    }
    
    const ordersHTML = orders.map((order, index) => {
        console.log(`[DEBUG] –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞—è–≤–∫–∏ ${index}:`, order);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ–ª—è
        if (!order.type || !order.amount || !order.cryptocurrency || !order.price || !order.fiat_currency) {
            console.log(`[DEBUG] –ó–∞—è–≤–∫–∞ ${index} –∏–º–µ–µ—Ç –ø—É—Å—Ç—ã–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è:`, {
                type: order.type,
                amount: order.amount, 
                cryptocurrency: order.cryptocurrency,
                price: order.price,
                fiat_currency: order.fiat_currency
            });
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ –Ω–∞—à–∞ –ª–∏ —ç—Ç–æ –∑–∞—è–≤–∫–∞
        const isMyOrder = currentInternalUserId && order.user_id === currentInternalUserId;
        
        // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â—É—é —Å—É–º–º—É —Å–¥–µ–ª–∫–∏
        const totalAmount = order.total_amount || (order.amount * order.price);
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä–∞
        const authorName = order.user_name || order.first_name || `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${order.user_id}`;
        const authorUsername = order.username; 
        console.log('[DEBUG] –î–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∞ –∑–∞—è–≤–∫–∏:', { 
            authorName, 
            authorUsername, 
            user_name: order.user_name,
            first_name: order.first_name,
            username: order.username 
        });
        
        const authorDisplay = authorUsername ? 
            `<span onclick="openTelegramProfile('${authorUsername}')" style="color: var(--tg-theme-link-color, #0088cc); cursor: pointer; text-decoration: underline; font-weight: 500;">@${authorUsername}</span>` :
            `<span style="color: var(--tg-theme-text-color, #000); font-weight: 500;">${authorName}</span>`;
        
        return '<div class="order-card">' +
            '<div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 12px;">' +
                '<span style="font-weight: 600; color: ' + (order.type === 'buy' ? '#22c55e' : '#ef4444') + ';">' +
                    (order.type === 'buy' ? 'üü¢ –ü–æ–∫—É–ø–∫–∞' : 'üî¥ –ü—Ä–æ–¥–∞–∂–∞') +
                '</span>' +
                '<span style="font-size: 12px; color: var(--tg-theme-hint-color, #708499);">' +
                    (order.created_at ? new Date(order.created_at).toLocaleString('ru') : '–î–∞—Ç–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞') +
                '</span>' +
            '</div>' +
            
            '<div style="margin-bottom: 10px;">' +
                '<div style="font-size: 14px; margin-bottom: 4px;">üë§ –ê–≤—Ç–æ—Ä: ' + authorDisplay + '</div>' +
            '</div>' +
            
            '<div style="background: var(--tg-theme-secondary-bg-color, rgba(255,255,255,0.1)); border: 1px solid var(--tg-theme-section-separator-color, rgba(255,255,255,0.2)); padding: 10px; border-radius: 6px; margin-bottom: 10px;">' +
                '<div style="display: grid; grid-template-columns: 1fr 1fr; gap: 8px; font-size: 13px;">' +
                    '<div>' +
                        '<span style="color: var(--tg-theme-hint-color, #708499);">üìä –û–±—ä–µ–º:</span><br>' +
                        '<strong style="color: var(--tg-theme-text-color, #000);">' + (order.amount || '?') + ' ' + (order.cryptocurrency || '?') + '</strong>' +
                    '</div>' +
                    '<div>' +
                        '<span style="color: var(--tg-theme-hint-color, #708499);">üí∞ –ö—É—Ä—Å:</span><br>' +
                        '<strong style="color: var(--tg-theme-text-color, #000);">' + (order.price || '?') + ' ' + (order.fiat_currency || '?') + ' –∑–∞ 1' + (order.cryptocurrency || '?') + '</strong>' +
                    '</div>' +
                '</div>' +
                '<div style="margin-top: 8px; padding-top: 8px; border-top: 1px solid var(--tg-theme-section-separator-color, #e2e8f0); font-size: 13px;">' +
                    '<span style="color: var(--tg-theme-hint-color, #708499);">üíµ –û–±—â–∞—è —Å—É–º–º–∞:</span> ' +
                    '<strong style="color: var(--tg-theme-text-color, #000); font-size: 15px;">' + totalAmount.toLocaleString('ru') + ' ' + (order.fiat_currency || '?') + '</strong>' +
                '</div>' +
            '</div>' +
            
            '<div style="font-size: 12px; color: var(--tg-theme-hint-color, #708499); margin-bottom: 10px;">' +
                'üí≥ –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã: ' + ((order.payment_methods || []).join(', ') || '–ù–µ —É–∫–∞–∑–∞–Ω–æ') +
            '</div>' +
            
            (order.description ? '<div style="font-size: 12px; margin-bottom: 10px; color: var(--tg-theme-text-color, #000);">' + order.description + '</div>' : '') +
            
            (!isMyOrder ? 
                '<div style="display: flex; gap: 8px; margin-top: 12px;">' +
                    '<button onclick="openUserProfile(' + (order.user_id || 0) + ')" ' +
                           'style="background: var(--tg-theme-hint-color, #6c757d); color: var(--tg-theme-button-text-color, white); border: none; padding: 8px 12px; ' +
                           'border-radius: 4px; font-size: 12px; flex: 1;">üë§ –ü—Ä–æ—Ñ–∏–ª—å</button>' +
                    '<button onclick="respondToOrder(' + (order.id || 0) + ')" ' +
                           'style="background: var(--tg-theme-button-color, #22c55e); color: var(--tg-theme-button-text-color, white); border: none; padding: 8px 12px; ' +
                           'border-radius: 4px; font-size: 12px; flex: 2;">ü§ù –û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è</button>' +
                '</div>' : 
                '<div style="display: flex; gap: 8px; margin-top: 12px;">' +
                    '<div style="background: var(--tg-theme-secondary-bg-color, #e8f4fd); border: 1px solid var(--tg-theme-link-color, #007bff); border-radius: 4px; padding: 8px 12px; font-size: 12px; color: var(--tg-theme-link-color, #007bff); flex: 1; text-align: center; font-weight: 500;">üìù –í–∞—à–∞ –∑–∞—è–≤–∫–∞</div>' +
                    '<button onclick="editOrder(' + (order.id || 0) + ')" ' +
                           'style="background: var(--tg-theme-button-color, #f59e0b); color: var(--tg-theme-button-text-color, white); border: none; padding: 8px 12px; ' +
                           'border-radius: 4px; font-size: 12px; flex: 1;">‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>' +
                    '<button onclick="viewOrderResponses(' + (order.id || 0) + ')" ' +
                           'style="background: var(--tg-theme-button-color, #3b82f6); color: var(--tg-theme-button-text-color, white); border: none; padding: 8px 12px; ' +
                           'border-radius: 4px; font-size: 12px; flex: 1;">üëÄ –û—Ç–∫–ª–∏–∫–∏ (' + (order.response_count || 0) + ')</button>' +
                '</div>'
            ) +
        '</div>';
    }).join('');
    
    content.innerHTML = ordersHTML;
}

// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
function showSuccess(message) {
    if (tg) {
        tg.showAlert(message);
    } else {
        alert('‚úÖ ' + message);
    }
}

function showError(message) {
    if (tg) {
        tg.showAlert('‚ùå ' + message);
    } else {
        alert('‚ùå ' + message);
    }
}

// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function showAlert(message) {
    if (tg) {
        tg.showAlert(message);
    } else {
        alert(message);
    }
}

// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è HTTP –∑–∞–ø—Ä–æ—Å–æ–≤
async function apiRequest(url, method = 'GET', data = null) {
    const options = {
        method: method,
        headers: {
            'Content-Type': 'application/json'
        }
    };
    
    // –î–æ–±–∞–≤–ª—è–µ–º Telegram User ID –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    if (currentUser && currentUser.id) {
        options.headers['X-Telegram-User-ID'] = currentUser.id.toString();
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è POST/PUT –∑–∞–ø—Ä–æ—Å–æ–≤
    if (data && (method === 'POST' || method === 'PUT')) {
        options.body = JSON.stringify(data);
    }
    
    try {
        const response = await fetch(url, options);
        const result = await response.json();
        return result;
    } catch (error) {
        console.error('[ERROR] –û—à–∏–±–∫–∞ HTTP –∑–∞–ø—Ä–æ—Å–∞:', error);
        throw error;
    }
}

// –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ Telegram WebApp
async function authenticateUser() {
    if (!currentUser) {
        showError('–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã');
        return;
    }

    try {
        // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        const authData = {
            id: currentUser.id,
            first_name: currentUser.first_name || '',
            last_name: currentUser.last_name || '',
            username: currentUser.username || '',
            photo_url: currentUser.photo_url || '',
            auth_date: Math.floor(Date.now() / 1000),
            hash: 'dummy_hash' // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —Ç—É—Ç –±—É–¥–µ—Ç –Ω–∞—Å—Ç–æ—è—â–∏–π hash –æ—Ç Telegram
        };

        const response = await fetch('/api/v1/auth/login', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(authData)
        });

        const result = await response.json();

        if (result.success) {
            console.log('[INFO] –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞:', result.user);
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ "–º–æ–∏—Ö –∑–∞—è–≤–æ–∫"
            currentInternalUserId = result.user.id;
            
            document.querySelector('.user-info').textContent = 
                'üë§ ' + result.user.first_name + ' ‚≠ê' + result.user.rating.toFixed(1);
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞—è–≤–∫–∏ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
            loadOrders();
        } else {
            if (result.error && result.error.includes('–Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —á–ª–µ–Ω–æ–º –∑–∞–∫—Ä—ã—Ç–æ–≥–æ —á–∞—Ç–∞')) {
                showAccessDenied();
            } else {
                showError('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ' + result.error);
            }
        }
    } catch (error) {
        console.error('[ERROR] –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error);
        showError('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
    }
}

// –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç–∫–∞–∑–µ –≤ –¥–æ—Å—Ç—É–ø–µ
function showAccessDenied() {
    const container = document.querySelector('.container');
    container.innerHTML = `
        <div style="text-align: center; padding: 40px 20px; color: var(--tg-theme-hint-color, #708499);">
            <h2 style="color: var(--tg-theme-text-color, #000); margin-bottom: 16px;">üîí –î–æ—Å—Ç—É–ø –æ–≥—Ä–∞–Ω–∏—á–µ–Ω</h2>
            <p style="margin-bottom: 16px; line-height: 1.5;">
                –î–æ—Å—Ç—É–ø –∫ P2P –∫—Ä–∏–ø—Ç–æ–±–∏—Ä–∂–µ —Ä–∞–∑—Ä–µ—à–µ–Ω —Ç–æ–ª—å–∫–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º –∑–∞–∫—Ä—ã—Ç–æ–≥–æ —á–∞—Ç–∞.
            </p>
            <p style="font-size: 12px; opacity: 0.8;">
                –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∑–∞–∫—Ä—ã—Ç—ã–π —á–∞—Ç, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Ç–æ—Ä–≥–æ–≤–ª–µ.
            </p>
        </div>
    `;
    
    // –°–∫—Ä—ã–≤–∞–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
    document.querySelector('.navigation').style.display = 'none';
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–∏—Ö –∑–∞—è–≤–æ–∫
async function loadMyOrders() {
    console.log('[DEBUG] –ó–∞–ø—Ä–æ—Å –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–∏—Ö –∑–∞—è–≤–æ–∫');
    
    if (!currentUser) {
        console.log('[DEBUG] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
        showError('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
        return;
    }

    console.log('[DEBUG] –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞—è–≤–æ–∫ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', currentUser);
    const content = document.getElementById('my-ordersView');
    content.innerHTML = '<div class="loading"><div class="spinner"></div><p>–ó–∞–≥—Ä—É–∑–∫–∞ –≤–∞—à–∏—Ö –∑–∞—è–≤–æ–∫...</p></div>';
    
    try {
        const response = await fetch('/api/v1/orders/my', {
            headers: {
                'X-Telegram-User-ID': currentUser.id.toString()
            }
        });
        
        const result = await response.json();
        console.log('[DEBUG] loadMyOrders: –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', result);
        
        if (result.success) {
            console.log('[DEBUG] loadMyOrders: –£—Å–ø–µ—à–Ω–æ, –ø–µ—Ä–µ–¥–∞—é –∑–∞—è–≤–∫–∏ –≤ displayMyOrders:', result.orders);
            displayMyOrders(result.orders || []);
        } else {
            console.error('[ERROR] loadMyOrders: –û—à–∏–±–∫–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', result.error);
            content.innerHTML = '<p class="text-center text-muted">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞—è–≤–æ–∫</p>';
        }
    } catch (error) {
        console.error('[ERROR] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–∏—Ö –∑–∞—è–≤–æ–∫:', error);
        content.innerHTML = '<p class="text-center text-muted">–û—à–∏–±–∫–∞ —Å–µ—Ç–∏</p>';
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–æ–∏—Ö –∑–∞—è–≤–æ–∫
function displayMyOrders(orders) {
    console.log('[DEBUG] displayMyOrders –≤—ã–∑–≤–∞–Ω–∞ —Å –¥–∞–Ω–Ω—ã–º–∏:', orders);
    console.log('[DEBUG] –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞—è–≤–æ–∫ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è:', orders.length);
    
    const content = document.getElementById('my-ordersView');
    console.log('[DEBUG] displayMyOrders: –≠–ª–µ–º–µ–Ω—Ç my-ordersView –Ω–∞–π–¥–µ–Ω?', !!content);
    
    if (!content) {
        console.error('[ERROR] displayMyOrders: –≠–ª–µ–º–µ–Ω—Ç my-ordersView –Ω–µ –Ω–∞–π–¥–µ–Ω!');
        return;
    }
    
    if (orders.length === 0) {
        content.innerHTML = `
            <div style="text-align: center; padding: 40px 20px;">
                <div style="font-size: 48px; margin-bottom: 16px;">üìã</div>
                <h3 style="margin-bottom: 12px; color: var(--tg-theme-text-color, #000000);">–ú–æ–∏ –∑–∞—è–≤–∫–∏</h3>
                <p style="color: var(--tg-theme-hint-color, #708499); margin-bottom: 20px; line-height: 1.4;">
                    –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞—è–≤–æ–∫.<br/>
                    –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—É—é –∑–∞—è–≤–∫—É –Ω–∞ –ø–æ–∫—É–ø–∫—É –∏–ª–∏ –ø—Ä–æ–¥–∞–∂—É –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã!
                </p>
                <button class="btn btn-primary" id="createFirstOrderBtn" 
                        style="background: var(--tg-theme-button-color, #2481cc); color: var(--tg-theme-button-text-color, #ffffff); border: none; border-radius: 8px; padding: 12px 24px; font-size: 14px; cursor: pointer;">
                    üöÄ –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É
                </button>
            </div>
        `;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä–≤–æ–π –∑–∞—è–≤–∫–∏
        document.getElementById('createFirstOrderBtn').addEventListener('click', () => {
            document.getElementById('createOrderModal').classList.add('show');
        });
        return;
    }
    
    console.log('[DEBUG] displayMyOrders: –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–µ –∑–∞—è–≤–æ–∫...');
    
    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∑–∞—è–≤–∫–∏ –ø–æ —Å—Ç–∞—Ç—É—Å—É
    const activeOrders = orders.filter(o => o.status === 'active');
    const inDealOrders = orders.filter(o => o.status === 'matched' || o.status === 'in_progress');
    
    console.log('[DEBUG] displayMyOrders: activeOrders =', activeOrders.length);
    console.log('[DEBUG] displayMyOrders: inDealOrders =', inDealOrders.length);  
    const completedOrders = orders.filter(o => o.status === 'completed');
    const cancelledOrders = orders.filter(o => o.status === 'cancelled');
    
    console.log('[DEBUG] displayMyOrders: completedOrders =', completedOrders.length);
    console.log('[DEBUG] displayMyOrders: cancelledOrders =', cancelledOrders.length);
    console.log('[DEBUG] displayMyOrders: –ù–∞—á–∏–Ω–∞–µ–º —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å HTML...');
    
    let html = `
        <div style="padding: 20px;">
            <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;">
                <h2 style="margin: 0; color: var(--tg-theme-text-color, #000000);">üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏</h2>
                <button class="btn btn-primary" onclick="document.getElementById('createOrderModal').classList.add('show')" 
                        style="background: var(--tg-theme-button-color, #2481cc); color: var(--tg-theme-button-text-color, #ffffff); border: none; border-radius: 6px; padding: 8px 16px; font-size: 12px;">
                    ‚ûï –°–æ–∑–¥–∞—Ç—å
                </button>
            </div>
    `;
    
    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    html += `
        <div style="display: grid; grid-template-columns: 1fr 1fr 1fr; gap: 8px; margin-bottom: 20px;">
            <div style="text-align: center; padding: 12px; background: var(--tg-theme-secondary-bg-color, #f8f9fa); border-radius: 8px;">
                <div style="font-size: 18px; font-weight: 600; color: #22c55e;">${activeOrders.length}</div>
                <div style="font-size: 11px; color: var(--tg-theme-hint-color, #708499);">–ê–∫—Ç–∏–≤–Ω—ã–µ</div>
            </div>
            <div style="text-align: center; padding: 12px; background: var(--tg-theme-secondary-bg-color, #f8f9fa); border-radius: 8px;">
                <div style="font-size: 18px; font-weight: 600; color: #f59e0b;">${inDealOrders.length}</div>
                <div style="font-size: 11px; color: var(--tg-theme-hint-color, #708499);">–í —Å–¥–µ–ª–∫–µ</div>
            </div>
            <div style="text-align: center; padding: 12px; background: var(--tg-theme-secondary-bg-color, #f8f9fa); border-radius: 8px;">
                <div style="font-size: 18px; font-weight: 600; color: #3b82f6;">${completedOrders.length}</div>
                <div style="font-size: 11px; color: var(--tg-theme-hint-color, #708499);">–ó–∞–≤–µ—Ä—à–µ–Ω–æ</div>
            </div>
        </div>
    `;
    
    // –ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞—è–≤–∫–∏
    if (activeOrders.length > 0) {
        html += `<div style="margin-bottom: 20px;">
            <h3 style="font-size: 16px; margin-bottom: 12px; color: #22c55e;">üü¢ –ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞—è–≤–∫–∏</h3>`;
        
        activeOrders.forEach(order => {
            html += createOrderCard(order, 'active');
        });
        html += `</div>`;
    }
    
    // –ó–∞—è–≤–∫–∏ –≤ —Å–¥–µ–ª–∫–µ  
    if (inDealOrders.length > 0) {
        html += `<div style="margin-bottom: 20px;">
            <h3 style="font-size: 16px; margin-bottom: 12px; color: #f59e0b;">ü§ù –í –ø—Ä–æ—Ü–µ—Å—Å–µ —Å–¥–µ–ª–∫–∏</h3>`;
        
        inDealOrders.forEach(order => {
            html += createOrderCard(order, 'in_deal');
        });
        html += `</div>`;
    }
    
    // –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏
    if (completedOrders.length > 0) {
        html += `<div style="margin-bottom: 20px;">
            <h3 style="font-size: 16px; margin-bottom: 12px; color: #3b82f6;">‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ</h3>`;
        
        completedOrders.slice(0, 3).forEach(order => { // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3
            html += createOrderCard(order, 'completed');
        });
        html += `</div>`;
    }
    
    html += `</div>`;
    
    console.log('[DEBUG] displayMyOrders: –ì–æ—Ç–æ–≤—ã–π HTML –¥–ª–∏–Ω–æ–π', html.length, '—Å–∏–º–≤–æ–ª–æ–≤');
    console.log('[DEBUG] displayMyOrders: –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º innerHTML...');
    
    content.innerHTML = html;
    
    console.log('[DEBUG] displayMyOrders: –ó–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –∑–∞—è–≤–∫–∏ —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏
function createOrderCard(order, category) {
    const typeIcon = order.type === 'buy' ? 'üü¢' : 'üî¥';
    const typeText = order.type === 'buy' ? '–ü–æ–∫—É–ø–∫–∞' : '–ü—Ä–æ–¥–∞–∂–∞';
    const typeColor = order.type === 'buy' ? '#22c55e' : '#ef4444';
    
    const statusColors = {
        active: '#22c55e',
        matched: '#f59e0b', 
        in_progress: '#f59e0b',
        completed: '#3b82f6',
        cancelled: '#6b7280'
    };
    
    const totalAmount = (order.amount * order.price).toFixed(2);
    
    let actions = '';
    
    switch (category) {
        case 'active':
            actions = `
                <div style="display: flex; gap: 8px; margin-top: 12px;">
                    <button onclick="editOrder(${order.id})" class="btn-small btn-secondary">
                        ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                    </button>
                    <button onclick="viewOrderResponses(${order.id})" class="btn-small btn-info">
                        üëÄ –û—Ç–∫–ª–∏–∫–∏
                    </button>
                    <button onclick="cancelOrder(${order.id})" class="btn-small btn-danger">
                        ‚ùå –£–¥–∞–ª–∏—Ç—å
                    </button>
                </div>
            `;
            break;
        case 'in_deal':
            actions = `
                <div style="display: flex; gap: 8px; margin-top: 12px;">
                    <button onclick="viewActiveDeals(${order.id})" class="btn-small btn-primary">
                        ü§ù –ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–¥–µ–ª–∫–µ
                    </button>
                    <button onclick="viewOrderResponses(${order.id})" class="btn-small btn-info">
                        üëÄ –í—Å–µ –æ—Ç–∫–ª–∏–∫–∏
                    </button>
                </div>
            `;
            break;
        case 'completed':
            actions = `
                <div style="margin-top: 12px;">
                    <button onclick="viewOrderHistory(${order.id})" class="btn-small btn-secondary">
                        üìä –ò—Å—Ç–æ—Ä–∏—è
                    </button>
                </div>
            `;
            break;
    }
    
    return `
        <div class="order-card" style="border: 1px solid var(--tg-theme-section-separator-color, #e1e8ed); border-radius: 12px; padding: 16px; margin-bottom: 12px; background: var(--tg-theme-bg-color, #ffffff);">
            <div style="display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 12px;">
                <div>
                    <div style="font-weight: 600; color: ${typeColor}; margin-bottom: 4px;">
                        ${typeIcon} ${typeText}
                    </div>
                    <div style="font-size: 18px; font-weight: 700; color: var(--tg-theme-text-color, #000000);">
                        ${order.amount} ${order.cryptocurrency}
                    </div>
                    <div style="font-size: 14px; color: var(--tg-theme-hint-color, #708499);">
                        –ø–æ ${order.price} ${order.fiat_currency} = ${totalAmount} ${order.fiat_currency}
                    </div>
                </div>
                <div style="text-align: right;">
                    <div style="font-size: 11px; padding: 4px 8px; border-radius: 12px; background: ${statusColors[order.status]}; color: white; margin-bottom: 4px;">
                        ${getStatusText(order.status)}
                    </div>
                    <div style="font-size: 10px; color: var(--tg-theme-hint-color, #708499);">
                        ID: ${order.id}
                    </div>
                </div>
            </div>
            
            ${order.description ? `
            <div style="font-size: 12px; color: var(--tg-theme-text-color, #000000); margin-bottom: 8px; padding: 8px; background: var(--tg-theme-secondary-bg-color, #f8f9fa); border-radius: 6px;">
                üí¨ ${order.description}
            </div>
            ` : ''}
            
            <div style="display: flex; justify-content: space-between; font-size: 11px; color: var(--tg-theme-hint-color, #708499); margin-bottom: 8px;">
                <span>üí≥ ${Array.isArray(order.payment_methods) ? order.payment_methods.join(', ') : order.payment_methods || '–õ—é–±–æ–π —Å–ø–æ—Å–æ–±'}</span>
                <span>üìÖ ${new Date(order.created_at).toLocaleDateString('ru')}</span>
            </div>
            
            ${actions}
        </div>
    `;
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å–¥–µ–ª–æ–∫
async function loadDeals() {
    if (!currentUser) {
        showError('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
        return;
    }

    const content = document.getElementById('dealsView');
    content.innerHTML = '<div class="loading"><div class="spinner"></div><p>–ó–∞–≥—Ä—É–∑–∫–∞ —Å–¥–µ–ª–æ–∫...</p></div>';
    
    try {
        const response = await fetch('/api/v1/deals', {
            headers: {
                'X-Telegram-User-ID': currentUser.id.toString()
            }
        });
        
        const result = await response.json();
        
        if (result.success) {
            displayDeals(result.deals || []);
        } else {
            content.innerHTML = '<p class="text-center text-muted">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–¥–µ–ª–æ–∫</p>';
        }
    } catch (error) {
        console.error('[ERROR] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–¥–µ–ª–æ–∫:', error);
        content.innerHTML = '<p class="text-center text-muted">–û—à–∏–±–∫–∞ —Å–µ—Ç–∏</p>';
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–¥–µ–ª–æ–∫
function displayDeals(deals) {
    const content = document.getElementById('dealsView');
    
    if (deals.length === 0) {
        content.innerHTML = `
            <div class="text-center mt-md">
                <h2>–ò—Å—Ç–æ—Ä–∏—è —Å–¥–µ–ª–æ–∫</h2>
                <p class="text-muted">–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —Å–¥–µ–ª–æ–∫</p>
            </div>
        `;
        return;
    }
    
    let html = '<h2 style="margin-bottom: 16px;">–ò—Å—Ç–æ—Ä–∏—è —Å–¥–µ–ª–æ–∫</h2>';
    
    deals.forEach(deal => {
        const statusColor = deal.status === 'pending' ? '#f59e0b' : 
                           deal.status === 'completed' ? '#22c55e' : '#ef4444';
        
        html += `
            <div style="border: 1px solid var(--tg-theme-section-separator-color, #e1e8ed); 
                        border-radius: 8px; padding: 12px; margin-bottom: 12px;
                        background: var(--tg-theme-bg-color, #ffffff);">
                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 8px;">
                    <span style="font-weight: 600;">
                        üíº –°–¥–µ–ª–∫–∞ #${deal.id}
                    </span>
                    <span style="font-size: 12px; padding: 4px 8px; border-radius: 12px; background: ${statusColor}; color: white;">
                        ${getDealStatusText(deal.status)}
                    </span>
                </div>
                <div style="margin-bottom: 8px;">
                    <strong>${deal.amount} ${deal.cryptocurrency}</strong> –∑–∞ <strong>${deal.total_amount} ${deal.fiat_currency}</strong>
                </div>
                <div style="font-size: 12px; color: var(--tg-theme-hint-color, #708499);">
                    –°–æ–∑–¥–∞–Ω–æ: ${new Date(deal.created_at).toLocaleString('ru')}
                </div>
            </div>
        `;
    });
    
    content.innerHTML = html;
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è
async function loadProfile() {
    if (!currentUser) {
        showError('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
        return;
    }

    console.log('[DEBUG] –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', currentUser);
    
    const content = document.getElementById('profileView');
    content.innerHTML = '<div class="loading"><div class="spinner"></div><p>–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è...</p></div>';
    
    try {
        console.log('[DEBUG] –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è...');
        
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
        const [userResponse, statsResponse, reviewsResponse] = await Promise.all([
            fetch('/api/v1/auth/me', {
                headers: { 'X-Telegram-User-ID': currentUser.id.toString() }
            }).catch(err => {
                console.error('[DEBUG] –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ /auth/me:', err);
                return null;
            }),
            fetch('/api/v1/auth/stats', {
                headers: { 'X-Telegram-User-ID': currentUser.id.toString() }
            }).catch(err => {
                console.error('[DEBUG] –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ /auth/stats:', err);
                return null;
            }),
            fetch('/api/v1/auth/reviews?limit=5', {
                headers: { 'X-Telegram-User-ID': currentUser.id.toString() }
            }).catch(err => {
                console.error('[DEBUG] –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ /auth/reviews:', err);
                return null;
            })
        ]);

        let userData = currentUser;
        let userStats = null;
        let userReviews = [];

        console.log('[DEBUG] –°—Ç–∞—Ç—É—Å—ã –æ—Ç–≤–µ—Ç–æ–≤:', {
            user: userResponse ? userResponse.status : 'null',
            stats: statsResponse ? statsResponse.status : 'null', 
            reviews: reviewsResponse ? reviewsResponse.status : 'null'
        });

        // –ü–∞—Ä—Å–∏–º –æ—Ç–≤–µ—Ç—ã
        if (userResponse && userResponse.ok) {
            const userResult = await userResponse.json();
            console.log('[DEBUG] –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userResult);
            userData = userResult.user || currentUser;
        } else if (userResponse) {
            console.error('[DEBUG] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userResponse.status, await userResponse.text().catch(() => 'no text'));
        }

        if (statsResponse && statsResponse.ok) {
            const statsResult = await statsResponse.json();
            console.log('[DEBUG] –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', statsResult);
            userStats = statsResult.stats;
        } else if (statsResponse) {
            console.error('[DEBUG] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', statsResponse.status, await statsResponse.text().catch(() => 'no text'));
        }

        if (reviewsResponse && reviewsResponse.ok) {
            const reviewsResult = await reviewsResponse.json();
            console.log('[DEBUG] –û—Ç–∑—ã–≤—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', reviewsResult);
            userReviews = reviewsResult.reviews || [];
        } else if (reviewsResponse) {
            console.error('[DEBUG] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–∑—ã–≤–æ–≤:', reviewsResponse.status, await reviewsResponse.text().catch(() => 'no text'));
        }

        console.log('[DEBUG] –ü–µ—Ä–µ–¥–∞—á–∞ –¥–∞–Ω–Ω—ã—Ö –≤ displayMyProfile:', { userData, userStats, userReviews });
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞ –¥–ª—è –ø—É—Å—Ç–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
        if (!userStats || (userStats.total_orders === 0 && userStats.total_deals === 0)) {
            console.warn('[DEBUG] –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—É—Å—Ç–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞!', userStats);
            console.log('[DEBUG] –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userData);
            console.log('[DEBUG] currentInternalUserId:', currentInternalUserId);
            console.log('[DEBUG] –î–æ–ª–∂–µ–Ω –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è —ç–∫—Ä–∞–Ω –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
        }
        
        console.log('[DEBUG] –í—ã–∑—ã–≤–∞–µ–º displayMyProfile...');
        displayMyProfile(userData, userStats, userReviews);
        console.log('[DEBUG] displayMyProfile –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    } catch (error) {
        console.error('[ERROR] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è:', error);
        displayMyProfile(currentUser, null, []);
    }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ Telegram ID (–≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è)
async function getUserByTelegramID() {
    try {
        const response = await fetch('/api/v1/auth/me', {
            headers: { 'X-Telegram-User-ID': currentUser.id.toString() }
        });
        
        if (response.ok) {
            const result = await response.json();
            return result.user;
        }
    } catch (error) {
        console.error('[ERROR] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
    }
    return null;
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è —Å –æ—Ç–∑—ã–≤–∞–º–∏
function displayProfileWithReviews(user, reviews, stats) {
    const content = document.getElementById('profileView');
    
    const rating = stats?.average_rating || user.rating || 0;
    const totalReviews = stats?.total_reviews || 0;
    const stars = '‚≠ê'.repeat(Math.floor(rating)) + '‚òÜ'.repeat(5 - Math.floor(rating));
    const positivePercent = stats?.positive_percent || 0;
    
    let html = `
        <div style="padding: 16px;">
            <h2 style="margin-bottom: 16px; text-align: center;">üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å</h2>
            
            <!-- –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è -->
            <div style="text-align: center; margin-bottom: 24px;">
                <div style="font-size: 18px; font-weight: 600; margin-bottom: 8px;">
                    ${user.first_name} ${user.last_name || ''}
                </div>
                <div style="font-size: 14px; color: var(--tg-theme-hint-color, #708499); margin-bottom: 12px;">
                    @${user.username || '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}
                </div>
                <div style="font-size: 16px; margin-bottom: 8px;">
                    ${stars} ${rating.toFixed(1)} (${totalReviews} –æ—Ç–∑—ã–≤–æ–≤)
                </div>
                ${positivePercent > 0 ? `
                <div style="font-size: 12px; color: #22c55e;">
                    ${positivePercent.toFixed(0)}% –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤
                </div>` : ''}
            </div>
            
            <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ -->
            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 12px; margin-bottom: 24px;">
                <div style="text-align: center; padding: 12px; border: 1px solid var(--tg-theme-section-separator-color, #e1e8ed); border-radius: 8px;">
                    <div style="font-size: 18px; font-weight: 600; color: var(--tg-theme-link-color, #2481cc);">
                        ${user.total_deals || 0}
                    </div>
                    <div style="font-size: 11px; color: var(--tg-theme-hint-color, #708499);">
                        –í—Å–µ–≥–æ —Å–¥–µ–ª–æ–∫
                    </div>
                </div>
                <div style="text-align: center; padding: 12px; border: 1px solid var(--tg-theme-section-separator-color, #e1e8ed); border-radius: 8px;">
                    <div style="font-size: 18px; font-weight: 600; color: #22c55e;">
                        ${user.successful_deals || 0}
                    </div>
                    <div style="font-size: 11px; color: var(--tg-theme-hint-color, #708499);">
                        –£—Å–ø–µ—à–Ω—ã—Ö
                    </div>
                </div>
            </div>
    `;
    
    // –û—Ç–∑—ã–≤—ã
    if (reviews && reviews.length > 0) {
        html += `
            <div style="margin-bottom: 16px;">
                <h3 style="font-size: 16px; margin-bottom: 12px;">üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ç–∑—ã–≤—ã</h3>
        `;
        
        reviews.forEach(review => {
            const reviewStars = '‚≠ê'.repeat(review.rating) + '‚òÜ'.repeat(5 - review.rating);
            const reviewDate = new Date(review.created_at).toLocaleDateString('ru');
            
            html += `
                <div style="border: 1px solid var(--tg-theme-section-separator-color, #e1e8ed); 
                            border-radius: 8px; padding: 12px; margin-bottom: 8px;
                            background: var(--tg-theme-bg-color, #ffffff);">
                    <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 8px;">
                        <span style="font-size: 14px;">${reviewStars}</span>
                        <span style="font-size: 11px; color: var(--tg-theme-hint-color, #708499);">
                            ${reviewDate}
                        </span>
                    </div>
                    ${review.comment ? `
                    <div style="font-size: 13px; line-height: 1.4;">
                        ${review.comment}
                    </div>
                    ` : ''}
                    ${!review.is_anonymous && review.from_user_name ? `
                    <div style="font-size: 11px; color: var(--tg-theme-hint-color, #708499); margin-top: 6px;">
                        –û—Ç: ${review.from_user_username ? '@' + review.from_user_username : review.from_user_name}
                    </div>
                    ` : review.is_anonymous ? `
                    <div style="font-size: 11px; color: var(--tg-theme-hint-color, #708499); margin-top: 6px;">
                        –ê–Ω–æ–Ω–∏–º–Ω—ã–π –æ—Ç–∑—ã–≤
                    </div>
                    ` : ''}
                </div>
            `;
        });
        
        html += `</div>`;
    } else if (totalReviews === 0) {
        html += `
            <div style="text-center; padding: 20px; color: var(--tg-theme-hint-color, #708499);">
                üìù –ü–æ–∫–∞ –Ω–µ—Ç –æ—Ç–∑—ã–≤–æ–≤
            </div>
        `;
    }
    
    html += `
            <div style="font-size: 11px; color: var(--tg-theme-hint-color, #708499); text-align: center; margin-top: 16px;">
                Telegram ID: ${user.telegram_id || user.id}
            </div>
        </div>
    `;
    
    content.innerHTML = html;
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –±–µ–∑ –æ—Ç–∑—ã–≤–æ–≤)
function displayProfile(user) {
    displayProfileWithReviews(user, [], null);
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–æ–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è —Å –ø–æ–ª–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
function displayMyProfile(user, stats, reviews) {
    console.log('[DEBUG] displayMyProfile –≤—ã–∑–≤–∞–Ω–∞ —Å:', { user, stats, reviews });
    
    try {
        const content = document.getElementById('profileView');
        if (!content) {
            console.error('[ERROR] –≠–ª–µ–º–µ–Ω—Ç profileView –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ DOM!');
            return;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ user —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ, –∞ –Ω–µ –æ—à–∏–±–∫—É
        if (!user || user.message) {
            console.error('[ERROR] –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ–¥–µ—Ä–∂–∞—Ç –æ—à–∏–±–∫—É:', user);
            user = currentUser; // –ò—Å–ø–æ–ª—å–∑—É–µ–º fallback
        }
        
        // –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const avatarUrl = user.photo_url || '';
        const userName = user.first_name + (user.last_name ? ` ${user.last_name}` : '');
        const username = user.username ? `@${user.username}` : '';
        
        // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞  
        const rating = stats?.average_rating || user.rating || 0;
        const totalReviews = stats?.total_reviews || 0;
        const stars = '‚≠ê'.repeat(Math.floor(rating)) + '‚òÜ'.repeat(5 - Math.floor(rating));
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        const hasStats = stats && (stats.total_orders > 0 || stats.total_deals > 0 || totalReviews > 0);
        
        console.log('[DEBUG] hasStats =', hasStats, '–Ω–∞ –æ—Å–Ω–æ–≤–µ stats =', stats, 'totalReviews =', totalReviews);
        console.log('[DEBUG] –ù–∞—á–∏–Ω–∞–µ–º —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å HTML...');
    
    let html = `
        <div style="padding: 20px;">
            <!-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ -->
            <div style="text-align: center; margin-bottom: 24px;">
                
                <!-- –ê–≤–∞—Ç–∞—Ä -->
                <div style="margin-bottom: 16px;">
                    ${avatarUrl ? 
                        `<img src="${avatarUrl}" style="width: 80px; height: 80px; border-radius: 50%; border: 3px solid var(--tg-theme-link-color, #2481cc);" alt="–ê–≤–∞—Ç–∞—Ä">` :
                        `<div style="width: 80px; height: 80px; border-radius: 50%; background: var(--tg-theme-link-color, #2481cc); display: flex; align-items: center; justify-content: center; margin: 0 auto; font-size: 32px; color: white;">
                            ${user.first_name ? user.first_name[0].toUpperCase() : 'üë§'}
                        </div>`
                    }
                </div>
                
                <!-- –ò–º—è –∏ username -->
                <div style="margin-bottom: 12px;">
                    <div style="font-size: 20px; font-weight: 600; margin-bottom: 4px; color: var(--tg-theme-text-color, #000000);">
                        ${userName}
                    </div>
                    ${username ? `
                    <div style="font-size: 14px; color: var(--tg-theme-hint-color, #708499);">
                        ${username}
                    </div>` : ''}
                </div>
                
                <!-- –†–µ–π—Ç–∏–Ω–≥ -->
                <div style="font-size: 16px; margin-bottom: 8px;">
                    ${stars} ${rating.toFixed(1)}
                </div>
                <div style="font-size: 13px; color: var(--tg-theme-hint-color, #708499);">
                    ${totalReviews} –æ—Ç–∑—ã–≤${totalReviews === 1 ? '' : totalReviews > 4 ? '–æ–≤' : '–∞'}
                </div>
            </div>
            
            <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–¥–µ–ª–æ–∫ –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ —Ä–∞–±–æ—Ç—ã -->
            ${hasStats ? `
            <div class="profile-stats-grid" style="margin-bottom: 24px;">
                <div class="profile-stat-card">
                    <div class="profile-stat-number" style="color: #22c55e;">${stats?.completed_deals || 0}</div>
                    <div class="profile-stat-label">–ó–∞–≤–µ—Ä—à–µ–Ω–æ —Å–¥–µ–ª–æ–∫</div>
                </div>
                <div class="profile-stat-card">
                    <div class="profile-stat-number" style="color: #f59e0b;">${stats?.active_orders || 0}</div>
                    <div class="profile-stat-label">–ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞—è–≤–æ–∫</div>
                </div>
                <div class="profile-stat-card">
                    <div class="profile-stat-number" style="color: #3b82f6;">${stats?.total_orders || 0}</div>
                    <div class="profile-stat-label">–í—Å–µ–≥–æ –∑–∞—è–≤–æ–∫</div>
                </div>
                <div class="profile-stat-card">
                    <div class="profile-stat-number" style="color: #8b5cf6;">
                        ${stats?.success_rate ? stats.success_rate.toFixed(0) + '%' : '0%'}
                    </div>
                    <div class="profile-stat-label">–£—Å–ø–µ—à–Ω–æ—Å—Ç—å</div>
                </div>
            </div>` : `
            <div style="background: linear-gradient(135deg, var(--tg-theme-secondary-bg-color, #f8f9fa) 0%, var(--tg-theme-bg-color, #ffffff) 100%); border-radius: 16px; padding: 24px; margin-bottom: 24px; text-align: center; border: 1px solid var(--tg-theme-section-separator-color, #e1e8ed);">
                <div style="font-size: 32px; margin-bottom: 12px;">üöÄ</div>
                <div style="font-size: 18px; font-weight: 600; margin-bottom: 8px; color: var(--tg-theme-text-color, #000000);">
                    –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –±–∏—Ä–∂—É!
                </div>
                <div style="font-size: 14px; color: var(--tg-theme-hint-color, #708499); line-height: 1.4;">
                    –ü–æ–∫–∞ —É –≤–∞—Å –Ω–µ—Ç –∑–∞—è–≤–æ–∫ –∏ —Å–¥–µ–ª–æ–∫.<br/>
                    –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—É—é –∑–∞—è–≤–∫—É –∏ –Ω–∞—á–Ω–∏—Ç–µ —Ç–æ—Ä–≥–æ–≤–∞—Ç—å!
                </div>
                <div style="margin-top: 16px;">
                    <button onclick="showView('orders')" style="background: var(--tg-theme-button-color, #2481cc); color: var(--tg-theme-button-text-color, #ffffff); border: none; border-radius: 8px; padding: 10px 20px; font-size: 14px; cursor: pointer;">
                        üìã –ü–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞—è–≤–∫–∞–º
                    </button>
                </div>
            </div>
            `}
            

    `;
    
    // –û—Ç–∑—ã–≤—ã
    if (reviews && reviews.length > 0) {
        html += `
            <div class="profile-reviews-section">
                <div class="profile-reviews-title">üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ç–∑—ã–≤—ã –æ–±–æ –º–Ω–µ</div>
        `;
        
        reviews.slice(0, 3).forEach(review => {
            const reviewStars = '‚≠ê'.repeat(review.rating) + '‚òÜ'.repeat(5 - review.rating);
            const reviewDate = new Date(review.created_at).toLocaleDateString('ru');
            
            html += `
                <div class="profile-review-card">
                    <div class="profile-review-header">
                        <span class="profile-review-stars">${reviewStars}</span>
                        <span class="profile-review-date">${reviewDate}</span>
                    </div>
                    ${review.comment ? `
                    <div class="profile-review-comment">
                        ${review.comment}
                    </div>
                    ` : ''}
                    ${!review.is_anonymous && review.from_user_name ? `
                    <div class="profile-review-author" style="font-size: 11px; color: var(--tg-theme-hint-color, #708499); margin-top: 6px;">
                        –û—Ç: ${review.from_user_username ? '@' + review.from_user_username : review.from_user_name}
                    </div>
                    ` : review.is_anonymous ? `
                    <div class="profile-review-author" style="font-size: 11px; color: var(--tg-theme-hint-color, #708499); margin-top: 6px;">
                        –ê–Ω–æ–Ω–∏–º–Ω—ã–π –æ—Ç–∑—ã–≤
                    </div>
                    ` : ''}
                </div>
            `;
        });
        
        html += `</div>`;
    } else if (hasStats) {
        html += `
            <div style="text-align: center; padding: 20px; color: var(--tg-theme-hint-color, #666); font-size: 13px;">
                üìù –ü–æ–∫–∞ –Ω–µ—Ç –æ—Ç–∑—ã–≤–æ–≤ –æ–±–æ –º–Ω–µ
            </div>
        `;
    }
    
    // –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    html += `
            <div style="margin-top: 24px; text-align: center; padding-top: 16px; border-top: 1px solid var(--tg-theme-section-separator-color, #e1e8ed); font-size: 12px; color: var(--tg-theme-hint-color, #708499);">
                üóìÔ∏è –£—á–∞—Å—Ç–Ω–∏–∫ —Å ${new Date(user.created_at || Date.now()).toLocaleDateString('ru')}
                ${stats?.first_deal_date ? ` ‚Ä¢ –ü–µ—Ä–≤–∞—è —Å–¥–µ–ª–∫–∞: ${new Date(stats.first_deal_date).toLocaleDateString('ru')}` : ''}
            </div>
        </div>
    `;
    
    console.log('[DEBUG] HTML —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω, –¥–ª–∏–Ω–∞:', html.length, '—Å–∏–º–≤–æ–ª–æ–≤');
    console.log('[DEBUG] –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º innerHTML –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–∞:', content);
    
    if (!content) {
        console.error('[ERROR] –≠–ª–µ–º–µ–Ω—Ç profileView –Ω–µ –Ω–∞–π–¥–µ–Ω!');
        return;
    }
    
    content.innerHTML = html;
    
    // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å hidden —á—Ç–æ–±—ã –ø—Ä–æ—Ñ–∏–ª—å –±—ã–ª –≤–∏–¥–µ–Ω
    content.classList.remove('hidden');
    console.log('[DEBUG] –£–±—Ä–∞–Ω –∫–ª–∞—Å—Å hidden, –ø—Ä–æ—Ñ–∏–ª—å —Ç–µ–ø–µ—Ä—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–∏–¥–∏–º');
    
    console.log('[DEBUG] innerHTML —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ—Ñ–∏–ª—å –¥–æ–ª–∂–µ–Ω –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–æ–Ω—Ç–µ–Ω—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
    setTimeout(() => {
        if (content.innerHTML.length > 0) {
            console.log('[DEBUG] –ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω!');
        } else {
            console.error('[ERROR] –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –æ—Ç–æ–±—Ä–∞–∑–∏–ª—Å—è - innerHTML –ø—É—Å—Ç–æ–π');
        }
    }, 100);
    
    } catch (error) {
        console.error('[ERROR] –û—à–∏–±–∫–∞ –≤ displayMyProfile:', error);
        console.error('[ERROR] Stack trace:', error.stack);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–∞–∑–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        const content = document.getElementById('profileView');
        if (content) {
            content.innerHTML = `
                <div style="padding: 20px; text-align: center;">
                    <h2>‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è</h2>
                    <p style="color: #666; margin-top: 10px;">
                        –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è.<br/>
                        –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.
                    </p>
                </div>
            `;
        }
    }
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function getStatusText(status) {
    const statusMap = {
        'active': '–ê–∫—Ç–∏–≤–Ω–∞',
        'matched': '–°–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∞',
        'completed': '–ó–∞–≤–µ—Ä—à–µ–Ω–∞',
        'cancelled': '–û—Ç–º–µ–Ω–µ–Ω–∞'
    };
    return statusMap[status] || status;
}

function getDealStatusText(status) {
    const statusMap = {
        'pending': '–û–∂–∏–¥–∞–µ—Ç',
        'completed': '–ó–∞–≤–µ—Ä—à–µ–Ω–∞',
        'cancelled': '–û—Ç–º–µ–Ω–µ–Ω–∞'
    };
    return statusMap[status] || status;
}

// –û—Ç–º–µ–Ω–∞ –∑–∞—è–≤–∫–∏
async function cancelOrder(orderId) {
    if (!currentUser) {
        showError('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
        return;
    }
    
    if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å —ç—Ç—É –∑–∞—è–≤–∫—É?')) {
        return;
    }
    
    try {
        const response = await fetch(`/api/v1/orders/${orderId}`, {
            method: 'DELETE',
            headers: {
                'X-Telegram-User-ID': currentUser.id.toString()
            }
        });
        
        const result = await response.json();
        
        if (result.success) {
            showSuccess('–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞');
            loadMyOrders(); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫
        } else {
            showError('–û—à–∏–±–∫–∞ –æ—Ç–º–µ–Ω—ã –∑–∞—è–≤–∫–∏: ' + result.error);
        }
    } catch (error) {
        console.error('[ERROR] –û—à–∏–±–∫–∞ –æ—Ç–º–µ–Ω—ã –∑–∞—è–≤–∫–∏:', error);
        showError('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –∑–∞—è–≤–∫–∏');
    }
}

// –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–∑—ã–≤–∞
async function createReview(dealId, toUserId, rating, comment, isAnonymous) {
    if (!currentUser) {
        showError('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
        return;
    }
    
    try {
        const response = await fetch('/api/v1/reviews', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-Telegram-User-ID': currentUser.id.toString()
            },
            body: JSON.stringify({
                deal_id: dealId,
                to_user_id: toUserId,
                rating: rating,
                comment: comment,
                is_anonymous: isAnonymous
            })
        });
        
        const result = await response.json();
        
        if (result.success) {
            showSuccess('–û—Ç–∑—ã–≤ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!');
            loadDeals(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Å–¥–µ–ª–æ–∫
            closeReviewModal();
        } else {
            showError('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç–∑—ã–≤–∞: ' + (result.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'));
        }
    } catch (error) {
        console.error('[ERROR] –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç–∑—ã–≤–∞:', error);
        showError('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ—Ç–∑—ã–≤–∞');
    }
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç–∑—ã–≤–∞
function openReviewModal(dealId, toUserId) {
    const modal = document.getElementById('reviewModal');
    if (modal) {
        modal.classList.add('show');
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
        modal.dataset.dealId = dealId;
        modal.dataset.toUserId = toUserId;
        
        // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
        document.getElementById('reviewRating').value = '5';
        document.getElementById('reviewComment').value = '';
        document.getElementById('reviewAnonymous').checked = false;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–≤–µ–∑–¥–æ—á–∫–∏
        updateStarRating(5);
    }
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –æ—Ç–∑—ã–≤–∞
function closeReviewModal() {
    const modal = document.getElementById('reviewModal');
    if (modal) {
        modal.classList.remove('show');
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–≤–µ–∑–¥–Ω–æ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥–∞
function updateStarRating(rating) {
    const stars = document.querySelectorAll('.star-rating .star');
    stars.forEach((star, index) => {
        if (index < rating) {
            star.textContent = '‚≠ê';
            star.classList.add('active');
        } else {
            star.textContent = '‚òÜ';
            star.classList.remove('active');
        }
    });
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–∑—ã–≤–∞
function handleReviewSubmit() {
    const modal = document.getElementById('reviewModal');
    const dealId = parseInt(modal.dataset.dealId);
    const toUserId = parseInt(modal.dataset.toUserId);
    const rating = parseInt(document.getElementById('reviewRating').value);
    const comment = document.getElementById('reviewComment').value.trim();
    const isAnonymous = document.getElementById('reviewAnonymous').checked;
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    if (rating < 1 || rating > 5) {
        showError('–†–µ–π—Ç–∏–Ω–≥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 1 –¥–æ 5 –∑–≤–µ–∑–¥');
        return;
    }
    
    if (rating <= 2 && !comment) {
        showError('–î–ª—è –æ—Ü–µ–Ω–∫–∏ 1-2 –∑–≤–µ–∑–¥—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π');
        return;
    }
    
    if (comment.length > 500) {
        showError('–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 500 —Å–∏–º–≤–æ–ª–æ–≤');
        return;
    }
    
    createReview(dealId, toUserId, rating, comment, isAnonymous);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', () => {
    initTelegramWebApp();
    initNavigation();
    initModal();
    initReviewModal();
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –æ—Ç–∑—ã–≤–æ–≤
function initReviewModal() {
    // –°–æ–∑–¥–∞–µ–º HTML –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –æ—Ç–∑—ã–≤–∞ –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç
    if (!document.getElementById('reviewModal')) {
        const modalHTML = `
            <div id="reviewModal" class="modal" style="display: none;">
                <div class="modal-content" style="max-width: 400px;">
                    <div class="modal-header">
                        <h2>üìù –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤</h2>
                        <span class="close" onclick="closeReviewModal()">&times;</span>
                    </div>
                    <div class="modal-body">
                        <div style="margin-bottom: 16px;">
                            <label style="display: block; margin-bottom: 8px; font-weight: 600;">–†–µ–π—Ç–∏–Ω–≥:</label>
                            <div class="star-rating" style="font-size: 24px; margin-bottom: 8px;">
                                <span class="star active" data-rating="1" onclick="setRating(1)">‚≠ê</span>
                                <span class="star active" data-rating="2" onclick="setRating(2)">‚≠ê</span>
                                <span class="star active" data-rating="3" onclick="setRating(3)">‚≠ê</span>
                                <span class="star active" data-rating="4" onclick="setRating(4)">‚≠ê</span>
                                <span class="star active" data-rating="5" onclick="setRating(5)">‚≠ê</span>
                            </div>
                            <input type="hidden" id="reviewRating" value="5">
                        </div>
                        
                        <div style="margin-bottom: 16px;">
                            <label for="reviewComment" style="display: block; margin-bottom: 8px; font-weight: 600;">
                                –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:
                            </label>
                            <textarea id="reviewComment" 
                                    style="width: 100%; height: 80px; padding: 8px; border: 1px solid #ddd; border-radius: 4px; resize: vertical;" 
                                    placeholder="–û–ø–∏—à–∏—Ç–µ –≤–∞—à –æ–ø—ã—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –æ—Ü–µ–Ω–æ–∫ 3-5 –∑–≤–µ–∑–¥)"
                                    maxlength="500"></textarea>
                            <div style="font-size: 12px; color: #666; text-align: right;">
                                <span id="commentLength">0</span>/500
                            </div>
                        </div>
                        
                        <div style="margin-bottom: 16px;">
                            <label style="display: flex; align-items: center; font-size: 14px;">
                                <input type="checkbox" id="reviewAnonymous" style="margin-right: 8px;">
                                –ê–Ω–æ–Ω–∏–º–Ω—ã–π –æ—Ç–∑—ã–≤
                            </label>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" onclick="closeReviewModal()" 
                                style="background: #6c757d; color: white; border: none; padding: 8px 16px; border-radius: 4px; margin-right: 8px;">
                            –û—Ç–º–µ–Ω–∞
                        </button>
                        <button type="button" onclick="handleReviewSubmit()" 
                                style="background: #22c55e; color: white; border: none; padding: 8px 16px; border-radius: 4px;">
                            –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤
                        </button>
                    </div>
                </div>
            </div>
        `;
        
        document.body.insertAdjacentHTML('beforeend', modalHTML);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ —Å–∏–º–≤–æ–ª–æ–≤
        const commentField = document.getElementById('reviewComment');
        const lengthCounter = document.getElementById('commentLength');
        
        commentField.addEventListener('input', () => {
            lengthCounter.textContent = commentField.value.length;
        });
    }
}

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∑–≤–µ–∑–¥—É
function setRating(rating) {
    document.getElementById('reviewRating').value = rating;
    updateStarRating(rating);
}

// =====================================================
// –û–¢–ö–õ–ò–ö–ò –ù–ê –ó–ê–Ø–í–ö–ò –ò –ü–†–û–°–ú–û–¢–† –ü–†–û–§–ò–õ–ï–ô
// =====================================================

// –û—Ç–∫—Ä—ã—Ç–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function openUserProfile(userId) {
    if (!userId || userId === 0) {
        showError('–ù–µ–≤–µ—Ä–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
        return;
    }

    console.log('[DEBUG] –û—Ç–∫—Ä—ã—Ç–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID:', userId);
    
    // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if (!document.getElementById('profileModal')) {
        createProfileModal();
    }
    
    const modal = document.getElementById('profileModal');
    const content = document.getElementById('profileModalContent');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    modal.classList.add('show');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
    content.innerHTML = `
        <div class="loading">
            <div class="spinner"></div>
            <p>–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...</p>
        </div>
    `;
    
    try {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const [profileResponse, reviewsResponse] = await Promise.all([
            fetch(`/api/v1/users/${userId}/profile`, {
                headers: { 'X-Telegram-User-ID': currentUser.id.toString() }
            }),
            fetch(`/api/v1/reviews?user_id=${userId}&limit=5`, {
                headers: { 'X-Telegram-User-ID': currentUser.id.toString() }
            }).catch(() => null)
        ]);

        let profileData = null;
        let reviews = [];

        if (profileResponse && profileResponse.ok) {
            const result = await profileResponse.json();
            profileData = result.profile || result;
        }

        if (reviewsResponse && reviewsResponse.ok) {
            const result = await reviewsResponse.json();
            reviews = result.reviews || [];
        }

        displayUserProfileModal(profileData, reviews);
        
    } catch (error) {
        console.error('[ERROR] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è:', error);
        content.innerHTML = `
            <div class="text-center" style="padding: 20px;">
                <p>‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è</p>
                <p style="font-size: 12px; color: #666;">–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ</p>
            </div>
        `;
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
function displayUserProfileModal(profileData, reviews) {
    const content = document.getElementById('profileModalContent');
    
    if (!profileData) {
        content.innerHTML = `
            <div class="text-center" style="padding: 20px;">
                <p>‚ùå –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω</p>
            </div>
        `;
        return;
    }

    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    const user = profileData.user || {};
    const stats = profileData.stats || profileData;
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ stats –µ—Å–ª–∏ profileData —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É (–¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
    const userId = user.id || stats.user_id;
    const rating = stats.average_rating || 0;
    const totalReviews = stats.total_reviews || 0;
    const positivePercent = stats.positive_percent || 0;
    const stars = '‚≠ê'.repeat(Math.floor(rating)) + '‚òÜ'.repeat(5 - Math.floor(rating));
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    let userDisplayName = `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å #${userId}`;
    if (user.username) {
        userDisplayName = `@${user.username}`;
    } else if (user.first_name) {
        userDisplayName = user.first_name;
        if (user.last_name) {
            userDisplayName += ` ${user.last_name}`;
        }
    }

    let html = `
        <div class="text-center" style="margin-bottom: 20px;">
            <div style="font-size: 18px; font-weight: 600; margin-bottom: 8px; color: var(--tg-theme-text-color, #000000);">
                ${user.username ? 
                    `<a href="https://t.me/${user.username}" target="_blank" style="color: var(--tg-theme-link-color, #2481cc); text-decoration: none;">
                        ${userDisplayName}
                    </a>` : 
                    userDisplayName
                }
            </div>
            <div style="font-size: 16px; margin-bottom: 8px;">
                ${stars} ${rating.toFixed(1)} (${totalReviews} –æ—Ç–∑—ã–≤–æ–≤)
            </div>
            ${positivePercent > 0 ? `
            <div style="font-size: 13px; color: #22c55e;">
                ${positivePercent.toFixed(0)}% –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤
            </div>` : ''}
        </div>
        
        <div class="profile-stats-grid">
            <div class="profile-stat-card">
                <div class="profile-stat-number">${totalReviews}</div>
                <div class="profile-stat-label">–í—Å–µ–≥–æ –æ—Ç–∑—ã–≤–æ–≤</div>
            </div>
            <div class="profile-stat-card">
                <div class="profile-stat-number" style="color: #22c55e;">${Math.round(positivePercent)}%</div>
                <div class="profile-stat-label">–ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö</div>
            </div>
        </div>
    `;
    
    // –û—Ç–∑—ã–≤—ã (–∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ reviews –∏–ª–∏ recent_reviews –∏–∑ stats)
    const reviewsToShow = reviews && reviews.length > 0 ? reviews : (stats.recent_reviews || []);
    
    if (reviewsToShow.length > 0) {
        html += `
            <div class="profile-reviews-section">
                <div class="profile-reviews-title">üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ç–∑—ã–≤—ã</div>
        `;
        
        reviewsToShow.slice(0, 3).forEach(review => {
            const reviewStars = '‚≠ê'.repeat(review.rating) + '‚òÜ'.repeat(5 - review.rating);
            const reviewDate = new Date(review.created_at).toLocaleDateString('ru');
            
            html += `
                <div class="profile-review-card">
                    <div class="profile-review-header">
                        <span class="profile-review-stars">${reviewStars}</span>
                        <span class="profile-review-date">${reviewDate}</span>
                    </div>
                    ${review.comment ? `
                    <div class="profile-review-comment">
                        ${review.comment}
                    </div>
                    ` : ''}
                    ${!review.is_anonymous && review.from_user_name ? `
                    <div class="profile-review-author" style="font-size: 11px; color: var(--tg-theme-hint-color, #708499); margin-top: 6px;">
                        –û—Ç: ${review.from_user_username ? '@' + review.from_user_username : review.from_user_name}
                    </div>
                    ` : review.is_anonymous ? `
                    <div class="profile-review-author" style="font-size: 11px; color: var(--tg-theme-hint-color, #708499); margin-top: 6px;">
                        –ê–Ω–æ–Ω–∏–º–Ω—ã–π –æ—Ç–∑—ã–≤
                    </div>
                    ` : ''}
                </div>
            `;
        });
        
        html += `</div>`;
    } else {
        html += `
            <div class="text-center" style="padding: 20px; color: var(--tg-theme-hint-color, #666); font-size: 13px;">
                üìù –ü–æ–∫–∞ –Ω–µ—Ç –æ—Ç–∑—ã–≤–æ–≤
            </div>
        `;
    }
    
    content.innerHTML = html;
}

// –û—Ç–∫–ª–∏–∫ –Ω–∞ –∑–∞—è–≤–∫—É
async function respondToOrder(orderId) {
    if (!currentUser) {
        showError('–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è');
        return;
    }

    if (!orderId || orderId === 0) {
        showError('–ù–µ–≤–µ—Ä–Ω—ã–π ID –∑–∞—è–≤–∫–∏');
        return;
    }

    console.log('[DEBUG] –û—Ç–∫–ª–∏–∫ –Ω–∞ –∑–∞—è–≤–∫—É ID:', orderId);
    
    // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if (!document.getElementById('respondModal')) {
        createRespondModal();
    }
    
    const modal = document.getElementById('respondModal');
    const orderDetails = document.getElementById('respondOrderDetails');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    modal.classList.add('show');
    modal.dataset.orderId = orderId;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
    orderDetails.innerHTML = `
        <div class="loading">
            <div class="spinner"></div>
            <p>–ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞—è–≤–∫–µ...</p>
        </div>
    `;
    
    try {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–µ—Ç–∞–ª–∏ –∑–∞—è–≤–∫–∏
        const response = await fetch(`/api/v1/orders/${orderId}`, {
            headers: { 'X-Telegram-User-ID': currentUser.id.toString() }
        });
        
        const result = await response.json();
        
        if (result.success && result.order) {
            displayOrderDetails(result.order);
        } else {
            orderDetails.innerHTML = '<p>‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞—è–≤–∫–∏</p>';
        }
        
    } catch (error) {
        console.error('[ERROR] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞—è–≤–∫–∏:', error);
        orderDetails.innerHTML = '<p>‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏</p>';
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π –∑–∞—è–≤–∫–∏ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ –æ—Ç–∫–ª–∏–∫–∞
function displayOrderDetails(order) {
    const orderDetails = document.getElementById('respondOrderDetails');
    
    const totalAmount = order.total_amount || (order.amount * order.price);
    
    orderDetails.innerHTML = `
        <div class="order-info-card">
            <div class="order-info-title">
                ${order.type === 'buy' ? 'üü¢ –ó–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–∫—É–ø–∫—É' : 'üî¥ –ó–∞—è–≤–∫–∞ –Ω–∞ –ø—Ä–æ–¥–∞–∂—É'}
            </div>
            <div class="order-info-row">
                <span class="order-info-label">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:</span>
                <span class="order-info-value">${order.amount} ${order.cryptocurrency}</span>
            </div>
            <div class="order-info-row">
                <span class="order-info-label">–ö—É—Ä—Å:</span>
                <span class="order-info-value">${order.price} ${order.fiat_currency}</span>
            </div>
            <div class="order-info-row">
                <span class="order-info-label">–û–±—â–∞—è —Å—É–º–º–∞:</span>
                <span class="order-info-value" style="color: #22c55e; font-size: 16px;">
                    ${totalAmount.toFixed(2)} ${order.fiat_currency}
                </span>
            </div>
            <div class="order-info-row">
                <span class="order-info-label">–°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã:</span>
                <span class="order-info-value">${(order.payment_methods || []).join(', ') || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</span>
            </div>
            ${order.description ? `
            <div style="margin-top: 12px; padding-top: 12px; border-top: 1px solid var(--tg-theme-section-separator-color, #e1e8ed);">
                <div class="order-info-label" style="margin-bottom: 4px;">–û–ø–∏—Å–∞–Ω–∏–µ:</div>
                <div style="font-size: 13px; color: var(--tg-theme-text-color, #000000);">
                    ${order.description}
                </div>
            </div>
            ` : ''}
        </div>
    `;
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–∫–ª–∏–∫–∞ (–æ–±–Ω–æ–≤–ª–µ–Ω–æ –¥–ª—è –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–∏)
async function submitResponse() {
    const modal = document.getElementById('respondModal');
    const orderId = parseInt(modal.dataset.orderId);
    const message = document.getElementById('respondMessage').value.trim();
    
    if (!currentUser) {
        showAlert('‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è');
        return;
    }
    
    if (!orderId || orderId === 0) {
        showAlert('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π ID –∑–∞—è–≤–∫–∏');
        return;
    }
    
    // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    const submitBtn = modal.querySelector('button[onclick="submitResponse()"]');
    const originalText = submitBtn.textContent;
    submitBtn.disabled = true;
    submitBtn.textContent = '–û—Ç–ø—Ä–∞–≤–∫–∞...';
    
    try {
        console.log('[DEBUG] –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–∫–ª–∏–∫–∞ –Ω–∞ –∑–∞—è–≤–∫—É:', { orderId, message });
        
        // –°–æ–∑–¥–∞–µ–º –æ—Ç–∫–ª–∏–∫ —á–µ—Ä–µ–∑ –Ω–æ–≤—ã–π API
        const result = await apiRequest('/api/v1/responses', 'POST', {
            order_id: orderId,
            message: message
        });
        
        if (result.success) {
            console.log('[INFO] –û—Ç–∫–ª–∏–∫ —Å–æ–∑–¥–∞–Ω:', result.response);
            
            if (tg) {
                tg.showPopup({
                    message: '–û—Ç–∫–ª–∏–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!\n\n–í—ã –æ—Ç–∫–ª–∏–∫–Ω—É–ª–∏—Å—å –Ω–∞ –∑–∞—è–≤–∫—É. –ê–≤—Ç–æ—Ä –∑–∞—è–≤–∫–∏ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç –≤–∞—à –æ—Ç–∫–ª–∏–∫ –∏ –ø—Ä–∏–º–µ—Ç —Ä–µ—à–µ–Ω–∏–µ.'
                });
            } else {
                showAlert('‚úÖ –û—Ç–∫–ª–∏–∫ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –ê–≤—Ç–æ—Ä –∑–∞—è–≤–∫–∏ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç –≤–∞—à –æ—Ç–∫–ª–∏–∫.');
            }
            
            closeRespondModal();
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫
            loadOrders();
            
        } else {
            showAlert('‚ùå ' + (result.message || '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –æ—Ç–∫–ª–∏–∫'));
        }
        
    } catch (error) {
        console.error('[ERROR] –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç–∫–ª–∏–∫–∞:', error);
        showAlert('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–∫–ª–∏–∫–∞');
    } finally {
        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
        submitBtn.disabled = false;
        submitBtn.textContent = originalText;
    }
}

// –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–æ—Ñ–∏–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ
function createProfileModal() {
    const modalHTML = `
        <div id="profileModal" class="modal">
            <div class="modal-content">
                <div class="modal-header">
                    <div class="modal-title">üë§ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</div>
                    <button class="modal-close" onclick="closeProfileModal()">&times;</button>
                </div>
                <div class="modal-body" id="profileModalContent">
                    <div class="loading">
                        <div class="spinner"></div>
                        <p>–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è...</p>
                    </div>
                </div>
            </div>
        </div>
    `;
    document.body.insertAdjacentHTML('beforeend', modalHTML);
}

// –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –æ—Ç–∫–ª–∏–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ  
function createRespondModal() {
    const modalHTML = `
        <div id="respondModal" class="modal">
            <div class="modal-content">
                <div class="modal-header">
                    <div class="modal-title">ü§ù –û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è –Ω–∞ –∑–∞—è–≤–∫—É</div>
                    <button class="modal-close" onclick="closeRespondModal()">&times;</button>
                </div>
                <div class="modal-body">
                    <div id="respondOrderDetails">
                        <div class="loading">
                            <div class="spinner"></div>
                            <p>–ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞—è–≤–∫–µ...</p>
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">–°–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç—É (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ):</label>
                        <textarea id="respondMessage" class="form-textarea" rows="3" maxlength="200" 
                                  placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ì–æ—Ç–æ–≤ –∫ —Å–¥–µ–ª–∫–µ, –∂–¥—É –∫–æ–Ω—Ç–∞–∫—Ç–∞"></textarea>
                    </div>
                    
                    <!-- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–Ω—è—Ç–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ –≤ –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–µ –æ—Ç–∫–ª–∏–∫–æ–≤ -->
                    
                    <div class="modal-footer">
                        <button type="button" onclick="closeRespondModal()" class="btn btn-secondary">
                            –û—Ç–º–µ–Ω–∞
                        </button>
                        <button type="button" onclick="submitResponse()" class="btn btn-success">
                            üöÄ –û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è
                        </button>
                    </div>
                </div>
            </div>
        </div>
    `;
    document.body.insertAdjacentHTML('beforeend', modalHTML);
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
function closeProfileModal() {
    const modal = document.getElementById('profileModal');
    if (modal) {
        modal.classList.remove('show');
    }
}

function closeRespondModal() {
    console.log('[DEBUG] –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ—Ç–∫–ª–∏–∫–∞');
    try {
        const modal = document.getElementById('respondModal');
        if (modal) {
            modal.classList.remove('show');
            
            // –ë–µ–∑–æ–ø–∞—Å–Ω–æ –æ—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
            const messageField = document.getElementById('respondMessage');
            if (messageField && messageField.value !== undefined) {
                messageField.value = '';
                console.log('[DEBUG] –û—á–∏—Å—Ç–∏–ª–∏ –ø–æ–ª–µ —Å–æ–æ–±—â–µ–Ω–∏—è');
            }
            
            console.log('[DEBUG] –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ —É—Å–ø–µ—à–Ω–æ');
        } else {
            console.log('[DEBUG] –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
        }
    } catch (error) {
        console.error('[ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞:', error);
    }
}

// =====================================================
// –§–£–ù–ö–¶–ò–ò –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ó–ê–Ø–í–ö–ê–ú–ò  
// =====================================================

// –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏
async function editOrder(orderId) {
    if (!currentUser) {
        showError('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
        return;
    }

    try {
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏
        const response = await fetch(`/api/v1/orders/${orderId}`, {
            headers: { 'X-Telegram-User-ID': currentUser.id.toString() }
        });

        if (!response.ok) {
            showError('–ó–∞—è–≤–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
            return;
        }

        const result = await response.json();
        const order = result.order;

        // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É –¥–∞–Ω–Ω—ã–º–∏ –∑–∞—è–≤–∫–∏
        document.querySelector('[name="type"]').value = order.type;
        document.querySelector('[name="cryptocurrency"]').value = order.cryptocurrency;
        document.querySelector('[name="fiat_currency"]').value = order.fiat_currency;
        document.querySelector('[name="amount"]').value = order.amount;
        document.querySelector('[name="price"]').value = order.price;
        document.querySelector('[name="description"]').value = order.description || '';

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã
        const paymentMethods = Array.isArray(order.payment_methods) ? order.payment_methods : [];
        document.querySelectorAll('[name="payment_methods"]').forEach(checkbox => {
            checkbox.checked = paymentMethods.includes(checkbox.value);
        });

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        document.getElementById('createOrderModal').classList.add('show');
        
        // –ú–µ–Ω—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –∫–Ω–æ–ø–∫—É
        document.querySelector('.modal-title').textContent = '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞—è–≤–∫—É';
        const submitBtn = document.querySelector('#createOrderForm button[type="submit"]');
        submitBtn.textContent = '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è';
        
        // –î–æ–±–∞–≤–ª—è–µ–º ID –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        document.getElementById('createOrderForm').dataset.editId = orderId;
        
    } catch (error) {
        console.error('[ERROR] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞—è–≤–∫–∏:', error);
        showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∑–∞—è–≤–∫–∏');
    }
}

// –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç–∫–ª–∏–∫–æ–≤ –Ω–∞ –∑–∞—è–≤–∫—É
async function viewOrderResponses(orderId) {
    if (!currentUser) {
        showError('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
        return;
    }

    try {
        // –ü–æ–ª—É—á–∞–µ–º —Å–¥–µ–ª–∫–∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –∑–∞—è–≤–∫–æ–π
        const response = await fetch(`/api/v1/deals?order_id=${orderId}`, {
            headers: { 'X-Telegram-User-ID': currentUser.id.toString() }
        });

        const result = await response.json();
        
        if (result.success) {
            displayOrderResponses(orderId, result.deals || []);
        } else {
            showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç–∫–ª–∏–∫–æ–≤');
        }
    } catch (error) {
        console.error('[ERROR] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç–∫–ª–∏–∫–æ–≤:', error);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É –µ—Å–ª–∏ API –ø–æ–∫–∞ –Ω–µ –≥–æ—Ç–æ–≤
        displayOrderResponses(orderId, []);
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç–∫–ª–∏–∫–æ–≤ –Ω–∞ –∑–∞—è–≤–∫—É
function displayOrderResponses(orderId, responses) {
    const modalHTML = `
        <div id="responsesModal" class="modal show">
            <div class="modal-content">
                <div class="modal-header">
                    <div class="modal-title">üë• –û—Ç–∫–ª–∏–∫–∏ –Ω–∞ –∑–∞—è–≤–∫—É #${orderId}</div>
                    <button class="modal-close" onclick="closeResponsesModal()">&times;</button>
                </div>
                <div class="modal-body">
                    ${responses.length === 0 ? `
                        <div style="text-align: center; padding: 30px; color: var(--tg-theme-hint-color, #708499);">
                            <div style="font-size: 48px; margin-bottom: 16px;">ü§∑‚Äç‚ôÇÔ∏è</div>
                            <h3 style="margin-bottom: 8px;">–ü–æ–∫–∞ –Ω–∏–∫—Ç–æ –Ω–µ –æ—Ç–∫–ª–∏–∫–Ω—É–ª—Å—è</h3>
                            <p style="font-size: 14px; line-height: 1.4;">
                                –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –∏ –≤–∏–¥–Ω–∞ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.<br/>
                                –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–∫–ª–∏–∫–æ–≤ –∏–ª–∏ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∑–∞—è–≤–∫—É.
                            </p>
                        </div>
                    ` : responses.map(response => `
                        <div style="border: 1px solid var(--tg-theme-section-separator-color, #e1e8ed); border-radius: 12px; padding: 16px; margin-bottom: 12px; background: var(--tg-theme-bg-color, #ffffff);">
                            <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 12px;">
                                <div>
                                    <div style="font-weight: 600; color: var(--tg-theme-text-color, #000000);">
                                        üë§ ${response.buyer_id === currentInternalUserId ? '–ü–æ–∫—É–ø–∞—Ç–µ–ª—å' : '–ü—Ä–æ–¥–∞–≤–µ—Ü'} #${response.buyer_id === currentInternalUserId ? response.seller_id : response.buyer_id}
                                    </div>
                                    <div style="font-size: 12px; color: var(--tg-theme-hint-color, #708499);">
                                        ${new Date(response.created_at).toLocaleString('ru')}
                                    </div>
                                </div>
                                <div style="font-size: 11px; padding: 4px 8px; border-radius: 12px; background: #f59e0b; color: white;">
                                    ${response.status || 'pending'}
                                </div>
                            </div>
                            
                            <div style="margin-bottom: 12px;">
                                <div style="font-weight: 600; margin-bottom: 4px;">
                                    ${response.amount} ${response.cryptocurrency} –∑–∞ ${(response.amount * response.price).toFixed(2)} ${response.fiat_currency}
                                </div>
                                <div style="font-size: 12px; color: var(--tg-theme-hint-color, #708499);">
                                    –ö—É—Ä—Å: ${response.price} ${response.fiat_currency}
                                </div>
                            </div>
                            
                            ${response.notes ? `
                                <div style="margin-bottom: 12px; padding: 8px; background: var(--tg-theme-secondary-bg-color, #f8f9fa); border-radius: 6px; font-size: 13px;">
                                    üí¨ ${response.notes}
                                </div>
                            ` : ''}
                            
                            <div style="display: flex; gap: 8px;">
                                <button onclick="viewDealDetails(${response.id})" class="btn-small btn-info">
                                    üìã –î–µ—Ç–∞–ª–∏ —Å–¥–µ–ª–∫–∏
                                </button>
                                <button onclick="openUserProfile(${response.buyer_id === currentInternalUserId ? response.seller_id : response.buyer_id})" class="btn-small btn-secondary">
                                    üë§ –ü—Ä–æ—Ñ–∏–ª—å
                                </button>
                            </div>
                        </div>
                    `).join('')}
                </div>
            </div>
        </div>
    `;
    
    document.body.insertAdjacentHTML('beforeend', modalHTML);
}

// –ü–µ—Ä–µ—Ö–æ–¥ –∫ –∞–∫—Ç–∏–≤–Ω—ã–º —Å–¥–µ–ª–∫–∞–º –ø–æ –∑–∞—è–≤–∫–µ
async function viewActiveDeals(orderId) {
    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É –æ—Ç–∫–ª–∏–∫–æ–≤
    const responsesTab = document.querySelector('[data-view="responses"]');
    if (responsesTab) {
        responsesTab.click();
        
        // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–¥–µ–ª–æ–∫
        setTimeout(() => {
            switchResponseTab('active-deals');
            highlightDealsByOrder(orderId);
        }, 500);
    }
}

// –ü–æ–¥—Å–≤–µ—Ç–∫–∞ —Å–¥–µ–ª–æ–∫ –ø–æ –∑–∞—è–≤–∫–µ
function highlightDealsByOrder(orderId) {
    const dealCards = document.querySelectorAll('.deal-card');
    dealCards.forEach(card => {
        const cardOrderId = card.dataset.orderId;
        if (cardOrderId === orderId.toString()) {
            card.style.border = '2px solid #f59e0b';
            card.style.background = 'rgba(245, 158, 11, 0.1)';
        }
    });
}

// –ò—Å—Ç–æ—Ä–∏—è –∑–∞—è–≤–∫–∏ (–∑–∞–≥–ª—É—à–∫–∞)
async function viewOrderHistory(orderId) {
    showInfo(`–ò—Å—Ç–æ—Ä–∏—è –∑–∞—è–≤–∫–∏ #${orderId} –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö`);
}

// –î–µ—Ç–∞–ª–∏ —Å–¥–µ–ª–∫–∏
async function viewDealDetails(dealId) {
    if (!currentUser) {
        showError('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
        return;
    }

    try {
        const response = await fetch(`/api/v1/deals/${dealId}`, {
            headers: { 'X-Telegram-User-ID': currentUser.id.toString() }
        });

        if (response.ok) {
            const result = await response.json();
            displayDealDetails(result.deal);
        } else {
            showError('–°–¥–µ–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        }
    } catch (error) {
        console.error('[ERROR] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–¥–µ–ª–∫–∏:', error);
        showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Å–¥–µ–ª–∫–∏');
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π —Å–¥–µ–ª–∫–∏
function displayDealDetails(deal) {
    const modalHTML = `
        <div id="dealDetailsModal" class="modal show">
            <div class="modal-content">
                <div class="modal-header">
                    <div class="modal-title">ü§ù –°–¥–µ–ª–∫–∞ #${deal.id}</div>
                    <button class="modal-close" onclick="closeDealDetailsModal()">&times;</button>
                </div>
                <div class="modal-body">
                    <div style="padding: 16px;">
                        <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 16px; margin-bottom: 20px;">
                            <div>
                                <div style="font-size: 12px; color: var(--tg-theme-hint-color, #708499); margin-bottom: 4px;">–ü–æ–∫—É–ø–∞—Ç–µ–ª—å</div>
                                <div style="font-weight: 600;">üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å #${deal.buyer_id}</div>
                            </div>
                            <div>
                                <div style="font-size: 12px; color: var(--tg-theme-hint-color, #708499); margin-bottom: 4px;">–ü—Ä–æ–¥–∞–≤–µ—Ü</div>
                                <div style="font-weight: 600;">üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å #${deal.seller_id}</div>
                            </div>
                        </div>
                        
                        <div style="background: var(--tg-theme-secondary-bg-color, #f8f9fa); border-radius: 12px; padding: 16px; margin-bottom: 20px;">
                            <div style="font-size: 18px; font-weight: 700; margin-bottom: 8px;">
                                ${deal.amount} ${deal.cryptocurrency}
                            </div>
                            <div style="color: var(--tg-theme-hint-color, #708499);">
                                –ø–æ ${deal.price} ${deal.fiat_currency} = ${deal.total_amount} ${deal.fiat_currency}
                            </div>
                        </div>
                        
                        <div style="margin-bottom: 20px;">
                            <div style="font-size: 12px; color: var(--tg-theme-hint-color, #708499); margin-bottom: 8px;">–°—Ç–∞—Ç—É—Å —Å–¥–µ–ª–∫–∏</div>
                            <div style="display: inline-block; padding: 6px 12px; border-radius: 12px; background: #f59e0b; color: white; font-size: 12px;">
                                ${getDealStatusText(deal.status)}
                            </div>
                        </div>
                        
                        ${deal.notes ? `
                        <div style="margin-bottom: 20px;">
                            <div style="font-size: 12px; color: var(--tg-theme-hint-color, #708499); margin-bottom: 8px;">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</div>
                            <div style="padding: 12px; background: var(--tg-theme-secondary-bg-color, #f8f9fa); border-radius: 8px;">
                                ${deal.notes}
                            </div>
                        </div>
                        ` : ''}
                        
                        <div style="display: flex; gap: 8px;">
                            ${deal.status === 'pending' ? `
                                <button onclick="confirmDeal(${deal.id})" class="btn btn-success" style="flex: 1;">
                                    ‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å
                                </button>
                            ` : ''}
                            <button onclick="openUserProfile(${deal.buyer_id === currentInternalUserId ? deal.seller_id : deal.buyer_id})" class="btn btn-secondary" style="flex: 1;">
                                üë§ –ü—Ä–æ—Ñ–∏–ª—å –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    `;
    
    document.body.insertAdjacentHTML('beforeend', modalHTML);
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
function closeResponsesModal() {
    const modal = document.getElementById('responsesModal');
    if (modal) {
        modal.remove();
    }
}

function closeDealDetailsModal() {
    const modal = document.getElementById('dealDetailsModal');
    if (modal) {
        modal.remove();
    }
}

// –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–¥–µ–ª–∫–∏
async function confirmDeal(dealId) {
    if (!currentUser) {
        showError('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
        return;
    }

    if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —ç—Ç—É —Å–¥–µ–ª–∫—É?')) {
        return;
    }

    try {
        const response = await fetch(`/api/v1/deals/${dealId}/confirm`, {
            method: 'POST',
            headers: {
                'X-Telegram-User-ID': currentUser.id.toString(),
                'Content-Type': 'application/json'
            }
        });

        const result = await response.json();
        
        if (result.success) {
            showSuccess('–°–¥–µ–ª–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!');
            closeDealDetailsModal();
            loadMyOrders(); // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞—è–≤–∫–∏
            loadDeals(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–¥–µ–ª–∫–∏
        } else {
            showError('–û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏: ' + result.error);
        }
    } catch (error) {
        console.error('[ERROR] –û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏:', error);
        showError('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏');
    }
}

// –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
function showInfo(message) {
    const alertHTML = `
        <div style="position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); 
                    background: var(--tg-theme-bg-color, #ffffff); border: 1px solid var(--tg-theme-section-separator-color, #e1e8ed); 
                    border-radius: 12px; padding: 20px; z-index: 10000; min-width: 280px; text-align: center;">
            <div style="font-size: 32px; margin-bottom: 12px;">‚ÑπÔ∏è</div>
            <div style="font-size: 14px; margin-bottom: 16px;">${message}</div>
            <button onclick="this.parentElement.remove()" style="background: var(--tg-theme-button-color, #2481cc); color: var(--tg-theme-button-text-color, #ffffff); border: none; border-radius: 6px; padding: 8px 16px; cursor: pointer;">
                –ü–æ–Ω—è—Ç–Ω–æ
            </button>
        </div>
    `;
    
    document.body.insertAdjacentHTML('beforeend', alertHTML);
}

// =====================================================
// –§–£–ù–ö–¶–ò–ò –î–õ–Ø –†–ê–ë–û–¢–´ –° –û–¢–ö–õ–ò–ö–ê–ú–ò
// =====================================================

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–∞–∑–¥–µ–ª–∞ –æ—Ç–∫–ª–∏–∫–æ–≤
async function loadResponses() {
    console.log('[DEBUG] –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–∞–∑–¥–µ–ª–∞ –æ—Ç–∫–ª–∏–∫–æ–≤');
    
    // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∑–∞–≥—Ä—É–∂–∞–µ–º –º–æ–∏ –æ—Ç–∫–ª–∏–∫–∏
    await loadMyResponses();
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∞–±–æ–≤ –æ—Ç–∫–ª–∏–∫–æ–≤
function initResponseTabs() {
    console.log('[DEBUG] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∞–±–æ–≤ –æ—Ç–∫–ª–∏–∫–æ–≤');
    
    const tabs = document.querySelectorAll('.response-tab');
    tabs.forEach(tab => {
        tab.addEventListener('click', () => {
            const tabName = tab.dataset.tab;
            switchResponseTab(tabName);
        });
    });
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É —Ç–∞–±–∞–º–∏ –æ—Ç–∫–ª–∏–∫–æ–≤
async function switchResponseTab(tabName) {
    console.log('[DEBUG] –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ —Ç–∞–±:', tabName);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ —Ç–∞–±—ã
    const tabs = document.querySelectorAll('.response-tab');
    const contents = document.querySelectorAll('.response-tab-content');
    
    tabs.forEach(tab => {
        if (tab.dataset.tab === tabName) {
            tab.classList.add('active');
        } else {
            tab.classList.remove('active');
        }
    });
    
    contents.forEach(content => {
        if (content.id === tabName + '-content') {
            content.classList.add('active');
        } else {
            content.classList.remove('active');
        }
    });
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ç–∞–±–∞
    switch(tabName) {
        case 'my-responses':
            await loadMyResponses();
            break;
        case 'responses-to-my':
            await loadResponsesToMyOrders();
            break;
        case 'active-deals':
            await loadActiveDeals();
            break;
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–∏—Ö –æ—Ç–∫–ª–∏–∫–æ–≤
async function loadMyResponses() {
    console.log('[DEBUG] –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–∏—Ö –æ—Ç–∫–ª–∏–∫–æ–≤');
    
    const container = document.getElementById('myResponsesList');
    container.innerHTML = '<div class="loading"><div class="spinner"></div></div>';
    
    try {
        const result = await apiRequest('/api/v1/responses/my', 'GET');
        
        if (result.success) {
            displayMyResponses(result.responses || []);
        } else {
            container.innerHTML = `<div class="error-message">‚ùå ${result.message}</div>`;
        }
    } catch (error) {
        console.error('[ERROR] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–∏—Ö –æ—Ç–∫–ª–∏–∫–æ–≤:', error);
        container.innerHTML = '<div class="error-message">‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç–∫–ª–∏–∫–æ–≤</div>';
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç–∫–ª–∏–∫–æ–≤ –Ω–∞ –º–æ–∏ –∑–∞—è–≤–∫–∏
async function loadResponsesToMyOrders() {
    console.log('[DEBUG] –ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç–∫–ª–∏–∫–æ–≤ –Ω–∞ –º–æ–∏ –∑–∞—è–≤–∫–∏');
    
    const container = document.getElementById('responsesToMyList');
    container.innerHTML = '<div class="loading"><div class="spinner"></div></div>';
    
    try {
        const result = await apiRequest('/api/v1/responses/to-my', 'GET');
        
        if (result.success) {
            displayResponsesToMyOrders(result.responses || []);
        } else {
            container.innerHTML = `<div class="error-message">‚ùå ${result.message}</div>`;
        }
    } catch (error) {
        console.error('[ERROR] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç–∫–ª–∏–∫–æ–≤ –Ω–∞ –∑–∞—è–≤–∫–∏:', error);
        container.innerHTML = '<div class="error-message">‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç–∫–ª–∏–∫–æ–≤</div>';
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–¥–µ–ª–æ–∫
async function loadActiveDeals() {
    console.log('[DEBUG] –ó–∞–≥—Ä—É–∑–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–¥–µ–ª–æ–∫');
    
    const container = document.getElementById('activeDealsList');
    container.innerHTML = '<div class="loading"><div class="spinner"></div></div>';
    
    try {
        const result = await apiRequest('/api/v1/deals', 'GET');
        
        if (result.success) {
            displayActiveDeals(result.deals || []);
        } else {
            container.innerHTML = `<div class="error-message">‚ùå ${result.message}</div>`;
        }
    } catch (error) {
        console.error('[ERROR] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–¥–µ–ª–æ–∫:', error);
        container.innerHTML = '<div class="error-message">‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–¥–µ–ª–æ–∫</div>';
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–æ–∏—Ö –æ—Ç–∫–ª–∏–∫–æ–≤
function displayMyResponses(responses) {
    console.log('[DEBUG] –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–æ–∏—Ö –æ—Ç–∫–ª–∏–∫–æ–≤:', responses.length);
    
    const container = document.getElementById('myResponsesList');
    
    if (!responses || responses.length === 0) {
        container.innerHTML = `
            <div class="empty-state">
                <div class="empty-icon">üì§</div>
                <h3>–ü–æ–∫–∞ –Ω–µ—Ç –æ—Ç–∫–ª–∏–∫–æ–≤</h3>
                <p>–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "–†—ã–Ω–æ–∫" –∏ –æ—Ç–∫–ª–∏–∫–Ω–∏—Ç–µ—Å—å –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é –∑–∞—è–≤–∫—É</p>
            </div>
        `;
        return;
    }
    
    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –æ—Ç–∫–ª–∏–∫–∏ –ø–æ —Å—Ç–∞—Ç—É—Å—É
    const waiting = responses.filter(r => r.status === 'waiting');
    const accepted = responses.filter(r => r.status === 'accepted');
    const rejected = responses.filter(r => r.status === 'rejected');
    
    let html = '';
    
    if (waiting.length > 0) {
        html += `<div class="response-group">
            <h3 class="group-title">üü° –û–∂–∏–¥–∞—é—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è (${waiting.length})</h3>
            ${waiting.map(response => createMyResponseCard(response)).join('')}
        </div>`;
    }
    
    if (accepted.length > 0) {
        html += `<div class="response-group">
            <h3 class="group-title">üü¢ –ü—Ä–∏–Ω—è—Ç—ã (${accepted.length})</h3>
            ${accepted.map(response => createMyResponseCard(response)).join('')}
        </div>`;
    }
    
    if (rejected.length > 0) {
        html += `<div class="response-group">
            <h3 class="group-title">üî¥ –û—Ç–∫–ª–æ–Ω–µ–Ω—ã (${rejected.length})</h3>
            ${rejected.map(response => createMyResponseCard(response)).join('')}
        </div>`;
    }
    
    container.innerHTML = html;
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç–∫–ª–∏–∫–æ–≤ –Ω–∞ –º–æ–∏ –∑–∞—è–≤–∫–∏
function displayResponsesToMyOrders(responses) {
    console.log('[DEBUG] –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç–∫–ª–∏–∫–æ–≤ –Ω–∞ –º–æ–∏ –∑–∞—è–≤–∫–∏:', responses.length);
    
    const container = document.getElementById('responsesToMyList');
    
    if (!responses || responses.length === 0) {
        container.innerHTML = `
            <div class="empty-state">
                <div class="empty-icon">üì•</div>
                <h3>–ü–æ–∫–∞ –Ω–µ—Ç –æ—Ç–∫–ª–∏–∫–æ–≤</h3>
                <p>–°–æ–∑–¥–∞–π—Ç–µ –∑–∞—è–≤–∫—É –∏ –∂–¥–∏—Ç–µ –æ—Ç–∫–ª–∏–∫–æ–≤ –æ—Ç –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</p>
            </div>
        `;
        return;
    }
    
    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –æ—Ç–∫–ª–∏–∫–∏ –ø–æ –∑–∞—è–≤–∫–∞–º
    const responsesByOrder = {};
    responses.forEach(response => {
        if (!responsesByOrder[response.order_id]) {
            responsesByOrder[response.order_id] = [];
        }
        responsesByOrder[response.order_id].push(response);
    });
    
    let html = '';
    Object.entries(responsesByOrder).forEach(([orderId, orderResponses]) => {
        const waitingResponses = orderResponses.filter(r => r.status === 'waiting');
        
        // –ë–µ—Ä—ë–º –ø–µ—Ä–≤—ã–π –æ—Ç–∫–ª–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞—è–≤–∫–µ
        const firstResponse = orderResponses[0];
        const orderTypeText = firstResponse.order_type === 'buy' ? 'üü¢ –ü–æ–∫—É–ø–∫–∞' : 'üî¥ –ü—Ä–æ–¥–∞–∂–∞';
        const totalAmount = firstResponse.total_amount || (firstResponse.amount * firstResponse.price);
        
        html += `<div class="order-responses-group">
            <div class="order-info">
                <h4>üìã –ó–∞—è–≤–∫–∞ #${orderId} - ${orderTypeText}</h4>
                ${firstResponse.cryptocurrency ? `
                    <div style="font-size: 12px; color: var(--tg-theme-hint-color, #708499); margin-top: 4px;">
                        üí∞ ${firstResponse.amount || '?'} ${firstResponse.cryptocurrency || '?'} –∑–∞ ${firstResponse.price || '?'} ${firstResponse.fiat_currency || '?'} = ${totalAmount.toLocaleString('ru')} ${firstResponse.fiat_currency || '?'}
                    </div>
                ` : ''}
                <span class="response-count">${waitingResponses.length} –Ω–æ–≤—ã—Ö –æ—Ç–∫–ª–∏–∫–æ–≤</span>
            </div>
            ${orderResponses.map(response => createOrderResponseCard(response)).join('')}
        </div>`;
    });
    
    container.innerHTML = html;
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –º–æ–µ–≥–æ –æ—Ç–∫–ª–∏–∫–∞
function createMyResponseCard(response) {
    const statusConfig = {
        waiting: { icon: 'üü°', text: '–û–∂–∏–¥–∞–µ—Ç', color: '#f59e0b' },
        accepted: { icon: 'üü¢', text: '–ü—Ä–∏–Ω—è—Ç', color: '#22c55e' },
        rejected: { icon: 'üî¥', text: '–û—Ç–∫–ª–æ–Ω–µ–Ω', color: '#ef4444' }
    };
    
    const status = statusConfig[response.status] || statusConfig.waiting;
    const createdDate = new Date(response.created_at).toLocaleString('ru-RU');
    
    return `
        <div class="response-card my-response">
            <div class="response-header">
                <div class="response-status" style="color: ${status.color}">
                    ${status.icon} ${status.text}
                </div>
                <div class="response-date">${createdDate}</div>
            </div>
            
            <div class="response-order-info">
                <h4 class="order-title">üìã –ó–∞—è–≤–∫–∞ #${response.order_id} - ${response.order_type === 'buy' ? 'üü¢ –ü–æ–∫—É–ø–∫–∞' : 'üî¥ –ü—Ä–æ–¥–∞–∂–∞'}</h4>
                <div style="font-size: 13px; color: var(--tg-theme-hint-color, #708499); margin-top: 4px;">
                    üë§ –ê–≤—Ç–æ—Ä: ${response.author_username ? 
                        `<span onclick="openTelegramProfile('${response.author_username}')" style="color: var(--tg-theme-link-color, #0088cc); cursor: pointer; text-decoration: underline; font-weight: 500;">@${response.author_username}</span>` :
                        `<span style="color: var(--tg-theme-text-color, #000); font-weight: 500;">${response.author_name || '–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω'}</span>`
                    }
                </div>
                ${response.cryptocurrency ? `
                    <div style="font-size: 12px; color: var(--tg-theme-hint-color, #708499); margin-top: 6px;">
                        üí∞ ${response.amount || '?'} ${response.cryptocurrency || '?'} –∑–∞ ${response.price || '?'} ${response.fiat_currency || '?'} = ${(response.total_amount || (response.amount * response.price)).toLocaleString('ru')} ${response.fiat_currency || '?'}
                    </div>
                ` : ''}
            </div>
            
            <div class="response-message">
                <strong>üí¨ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:</strong>
                <p>${response.message || '–ë–µ–∑ —Å–æ–æ–±—â–µ–Ω–∏—è'}</p>
            </div>
            
            ${response.status === 'accepted' ? `
                <div class="response-actions">
                    <button onclick="goToDeal(${response.id})" class="btn btn-primary">
                        ü§ù –ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–¥–µ–ª–∫–µ
                    </button>
                </div>
            ` : ''}
        </div>
    `;
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –æ—Ç–∫–ª–∏–∫–∞ –Ω–∞ –º–æ—é –∑–∞—è–≤–∫—É
function createOrderResponseCard(response) {
    const statusConfig = {
        waiting: { icon: 'üü°', text: '–û–∂–∏–¥–∞–µ—Ç', color: '#f59e0b' },
        accepted: { icon: 'üü¢', text: '–ü—Ä–∏–Ω—è—Ç', color: '#22c55e' },
        rejected: { icon: 'üî¥', text: '–û—Ç–∫–ª–æ–Ω–µ–Ω', color: '#ef4444' }
    };
    
    const status = statusConfig[response.status] || statusConfig.waiting;
    const createdDate = new Date(response.created_at).toLocaleString('ru-RU');
    
    return `
        <div class="response-card order-response">
            <div class="response-header">
                <div class="response-user">üë§ ${response.username ? 
                    `<span onclick="openTelegramProfile('${response.username}')" style="color: var(--tg-theme-link-color, #0088cc); cursor: pointer; text-decoration: underline; font-weight: 500;">@${response.username}</span>` :
                    `<span style="color: var(--tg-theme-text-color, #000); font-weight: 500;">${response.user_name || `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å #${response.user_id}`}</span>`
                }</div>
                <div class="response-status" style="color: ${status.color}">
                    ${status.icon} ${status.text}
                </div>
            </div>
            
            <div class="response-date">${createdDate}</div>
            
            <div style="font-size: 12px; color: var(--tg-theme-hint-color, #708499); margin: 8px 0;">
                üìã ${response.order_type === 'buy' ? 'üü¢ –ü–æ–∫—É–ø–∫–∞' : 'üî¥ –ü—Ä–æ–¥–∞–∂–∞'} ${response.cryptocurrency || '?'} - ${response.amount || '?'} ${response.cryptocurrency || '?'} –∑–∞ ${response.price || '?'} ${response.fiat_currency || '?'} = ${(response.total_amount || (response.amount * response.price)).toLocaleString('ru')} ${response.fiat_currency || '?'}
            </div>
            
            <div class="response-message">
                <strong>üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ:</strong>
                <p>${response.message || '–ë–µ–∑ —Å–æ–æ–±—â–µ–Ω–∏—è'}</p>
            </div>
            
            ${response.status === 'waiting' ? `
                <div class="response-actions">
                    <button onclick="acceptResponse(${response.id})" class="btn btn-success">
                        ‚úÖ –ü—Ä–∏–Ω—è—Ç—å
                    </button>
                    <button onclick="rejectResponse(${response.id})" class="btn btn-danger">
                        ‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å
                    </button>
                </div>
            ` : ''}
        </div>
    `;
}

// –ü—Ä–∏–Ω—è—Ç–∏–µ –æ—Ç–∫–ª–∏–∫–∞
async function acceptResponse(responseId) {
    console.log('[DEBUG] –ü—Ä–∏–Ω—è—Ç–∏–µ –æ—Ç–∫–ª–∏–∫–∞:', responseId);
    
    try {
        const result = await apiRequest(`/api/v1/responses/${responseId}/accept`, 'POST');
        
        if (result.success) {
            showAlert('‚úÖ –û—Ç–∫–ª–∏–∫ –ø—Ä–∏–Ω—è—Ç! –°–æ–∑–¥–∞–Ω–∞ —Å–¥–µ–ª–∫–∞.');
            // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –æ—Ç–∫–ª–∏–∫–∏ –Ω–∞ –º–æ–∏ –∑–∞—è–≤–∫–∏
            await loadResponsesToMyOrders();
            // –¢–∞–∫–∂–µ –∑–∞–≥—Ä—É–∂–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–¥–µ–ª–∫–∏
            await loadActiveDeals();
        } else {
            showAlert('‚ùå ' + (result.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–Ω—è—Ç–∏–∏ –æ—Ç–∫–ª–∏–∫–∞'));
        }
    } catch (error) {
        console.error('[ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏–Ω—è—Ç–∏—è –æ—Ç–∫–ª–∏–∫–∞:', error);
        showAlert('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–Ω—è—Ç–∏–∏ –æ—Ç–∫–ª–∏–∫–∞');
    }
}

// –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –æ—Ç–∫–ª–∏–∫–∞
async function rejectResponse(responseId) {
    console.log('[DEBUG] –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –æ—Ç–∫–ª–∏–∫–∞:', responseId);
    
    try {
        const result = await apiRequest(`/api/v1/responses/${responseId}/reject`, 'POST');
        
        if (result.success) {
            showAlert('‚ùå –û—Ç–∫–ª–∏–∫ –æ—Ç–∫–ª–æ–Ω–µ–Ω');
            // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –æ—Ç–∫–ª–∏–∫–∏ –Ω–∞ –º–æ–∏ –∑–∞—è–≤–∫–∏
            await loadResponsesToMyOrders();
        } else {
            showAlert('‚ùå ' + (result.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –æ—Ç–∫–ª–∏–∫–∞'));
        }
    } catch (error) {
        console.error('[ERROR] –û—à–∏–±–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –æ—Ç–∫–ª–∏–∫–∞:', error);
        showAlert('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –æ—Ç–∫–ª–∏–∫–∞');
    }
}

// –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–¥–µ–ª–∫–µ
async function goToDeal(responseId) {
    console.log('[DEBUG] –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–¥–µ–ª–∫–µ –ø–æ –æ—Ç–∫–ª–∏–∫—É:', responseId);
    
    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Ç–∞–± –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–¥–µ–ª–æ–∫
    switchResponseTab('active-deals');
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–¥–µ–ª–æ–∫
function displayActiveDeals(deals) {
    console.log('[DEBUG] –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–¥–µ–ª–æ–∫:', deals.length, deals);
    
    const container = document.getElementById('activeDealsList');
    
    if (!deals || deals.length === 0) {
        container.innerHTML = `
            <div class="empty-state">
                <div class="empty-icon">‚è∞</div>
                <div class="empty-title">–ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–¥–µ–ª–æ–∫ –ø–æ–∫–∞ –Ω–µ—Ç</div>
                <div class="empty-subtitle">–ö–æ–≥–¥–∞ –≤—ã –ø—Ä–∏–º–µ—Ç–µ –æ—Ç–∫–ª–∏–∫ –∏–ª–∏ –≤–∞—à –æ—Ç–∫–ª–∏–∫ –±—É–¥–µ—Ç –ø—Ä–∏–Ω—è—Ç,<br>–∑–¥–µ—Å—å –ø–æ—è–≤—è—Ç—Å—è –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–¥–µ–ª–∫–∏</div>
            </div>
        `;
        return;
    }
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ —Å–¥–µ–ª–∫–∏
    const dealsHTML = deals.map(deal => createDealCard(deal)).join('');
    container.innerHTML = dealsHTML;
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ–π —Å–¥–µ–ª–∫–∏
function createDealCard(deal) {
    console.log('[DEBUG] –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Å–¥–µ–ª–∫–∏:', deal);
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–¥–µ–ª–∫–µ
    const isAuthor = currentInternalUserId === deal.author_id;
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∞ –∏ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞
    const authorName = deal.author_name || `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${deal.author_id}`;
    const authorUsername = deal.author_username ? `@${deal.author_username}` : '';
    const counterpartyName = deal.counterparty_name || `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${deal.counterparty_id}`;
    const counterpartyUsername = deal.counterparty_username ? `@${deal.counterparty_username}` : '';
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const counterpartyDisplayName = isAuthor ? counterpartyName : authorName;
    const counterpartyDisplayUsername = isAuthor ? counterpartyUsername : authorUsername;
    const counterpartyTelegramUsername = isAuthor ? deal.counterparty_username : deal.author_username;
    const counterpartyUserId = isAuthor ? deal.counterparty_id : deal.author_id;
    
    console.log('[DEBUG] Telegram usernames:', {
        authorUsername: deal.author_username,
        counterpartyUsername: deal.counterparty_username,
        counterpartyTelegramUsername: counterpartyTelegramUsername,
        isAuthor: isAuthor
    });
    
    // –°—Ç–∞—Ç—É—Å —Å–¥–µ–ª–∫–∏
    const statusConfig = {
        in_progress: { icon: '‚è≥', text: '–í –ø—Ä–æ—Ü–µ—Å—Å–µ', color: '#f59e0b' },
        waiting_payment: { icon: 'üí∞', text: '–û–∂–∏–¥–∞–Ω–∏–µ –æ–ø–ª–∞—Ç—ã', color: '#3b82f6' },
        completed: { icon: '‚úÖ', text: '–ó–∞–≤–µ—Ä—à–µ–Ω–∞', color: '#22c55e' },
        cancelled: { icon: '‚ùå', text: '–û—Ç–º–µ–Ω–µ–Ω–∞', color: '#ef4444' },
        expired: { icon: '‚è∞', text: '–ò—Å—Ç–µ–∫–ª–∞', color: '#6b7280' }
    };
    
    const status = statusConfig[deal.status] || statusConfig.in_progress;
    
    // –£–±–∏—Ä–∞–µ–º —Ç–∞–π–º–µ—Ä - –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º
    
    // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    const authorConfirmed = deal.author_confirmed || false;
    const counterConfirmed = deal.counter_confirmed || false;
    const myConfirmed = isAuthor ? authorConfirmed : counterConfirmed;
    const partnerConfirmed = isAuthor ? counterConfirmed : authorConfirmed;
    
    return `
        <div class="order-card">
            <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 12px;">
                <span style="font-weight: 600; color: ${deal.order_type === 'buy' ? '#22c55e' : '#ef4444'};">
                    ${deal.order_type === 'buy' ? 'üü¢ –ü–æ–∫—É–ø–∫–∞' : 'üî¥ –ü—Ä–æ–¥–∞–∂–∞'}
                </span>
                <div style="display: flex; align-items: center; gap: 8px;">
                    <span style="color: ${status.color}; font-weight: 500; font-size: 14px;">
                        ${status.icon} ${status.text}
                    </span>
                </div>
            </div>
            
            <div style="margin-bottom: 12px;">
                <strong style="font-size: 18px; color: var(--tg-theme-text-color, #000);">${deal.amount || '?'} ${deal.cryptocurrency || '?'}</strong> 
                <span style="color: var(--tg-theme-hint-color, #708499);">–∑–∞</span>
                <strong style="font-size: 16px; color: var(--tg-theme-text-color, #000);">${deal.price || '?'} ${deal.fiat_currency || '?'}</strong>
            </div>
            
            <div style="background: var(--tg-theme-secondary-bg-color, #f1f5f9); padding: 12px; border-radius: 6px; margin-bottom: 12px; font-size: 13px;">
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 8px;">
                    <div>
                        <div style="color: var(--tg-theme-hint-color, #708499); margin-bottom: 4px;">üìù –ê–≤—Ç–æ—Ä:</div>
                        <div style="font-weight: 500; color: var(--tg-theme-text-color, #000);">${authorName}</div>
                        <div style="color: var(--tg-theme-link-color, #3b82f6); font-size: 12px;">${authorUsername}</div>
                    </div>
                    <div>
                        <div style="color: var(--tg-theme-hint-color, #708499); margin-bottom: 4px;">ü§ù –û—Ç–∫–ª–∏–∫–Ω—É–ª—Å—è:</div>
                        <div style="font-weight: 500; color: var(--tg-theme-text-color, #000);">${counterpartyName}</div>
                        <div style="color: var(--tg-theme-link-color, #3b82f6); font-size: 12px;">${counterpartyUsername}</div>
                    </div>
                </div>
                
                <div style="margin-top: 12px; padding-top: 8px; border-top: 1px solid var(--tg-theme-section-separator-color, #e2e8f0);">
                    <div style="color: var(--tg-theme-hint-color, #708499); margin-bottom: 4px;">üí≥ –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:</div>
                    <div style="font-weight: 500; color: var(--tg-theme-text-color, #000);">${(deal.payment_methods || []).join(', ') || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
                </div>
                
                <div style="margin-top: 8px; display: grid; grid-template-columns: 1fr 1fr; gap: 12px; font-size: 12px;">
                    <div>
                        <span style="color: var(--tg-theme-hint-color, #708499);">üí∞ –ö—É—Ä—Å:</span>
                        <span style="font-weight: 500; color: var(--tg-theme-text-color, #000);">${deal.price} ${deal.fiat_currency}</span>
                    </div>
                    <div>
                        <span style="color: var(--tg-theme-hint-color, #708499);">üíµ –°—É–º–º–∞:</span>
                        <span style="font-weight: 500; color: var(--tg-theme-text-color, #000);">${deal.total_amount || (deal.amount * deal.price).toFixed(2)} ${deal.fiat_currency}</span>
                    </div>
                </div>
            </div>
            

            
            <div style="background: var(--tg-theme-secondary-bg-color, #f8fafc); border-radius: 6px; padding: 8px; margin-bottom: 12px;">
                <div style="font-size: 12px; color: var(--tg-theme-hint-color, #708499); margin-bottom: 6px;">–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è:</div>
                <div style="display: flex; justify-content: space-between;">
                    <div style="display: flex; align-items: center; gap: 4px;">
                        <span>${myConfirmed ? '‚úÖ' : '‚è≥'}</span>
                        <span style="font-size: 12px; color: var(--tg-theme-text-color, #000);">–í—ã</span>
                    </div>
                    <div style="display: flex; align-items: center; gap: 4px;">
                        <span>${partnerConfirmed ? '‚úÖ' : '‚è≥'}</span>
                        <span style="font-size: 12px; color: var(--tg-theme-text-color, #000);">–ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç</span>
                    </div>
                </div>
            </div>
            
            <div style="display: flex; gap: 8px;">
                ${counterpartyTelegramUsername ? `
                    <button onclick="contactCounterparty('${counterpartyTelegramUsername}')" style="background: var(--tg-theme-button-color, #0088cc); color: var(--tg-theme-button-text-color, white); border: none; padding: 8px 12px; border-radius: 4px; font-size: 12px; flex: 1;">
                        üí¨ –ù–∞–ø–∏—Å–∞—Ç—å
                    </button>
                ` : ''}
                
                ${deal.status === 'completed' ? `
                    <button onclick="openReviewModal(${deal.id}, ${counterpartyUserId}, '${counterpartyDisplayName}')" style="background: var(--tg-theme-button-color, #f59e0b); color: var(--tg-theme-button-text-color, white); border: none; padding: 8px 12px; border-radius: 4px; font-size: 12px; flex: 1;">
                        ‚≠ê –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤
                    </button>
                ` : `
                    <button onclick="confirmPayment(${deal.id}, ${isAuthor})" style="background: ${myConfirmed ? 'var(--tg-theme-hint-color, #6c757d)' : 'var(--tg-theme-button-color, #22c55e)'}; color: var(--tg-theme-button-text-color, white); border: none; padding: 8px 12px; border-radius: 4px; font-size: 12px; flex: 1;" ${myConfirmed ? 'disabled' : ''}>
                        ${myConfirmed ? '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ' : '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å'}
                    </button>
                `}
            </div>
        </div>
    `;
}

// –§—É–Ω–∫—Ü–∏—è —Ç–∞–π–º–µ—Ä–∞ —É–¥–∞–ª–µ–Ω–∞ - –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–∞–π–º–µ—Ä—ã –≤ —Å–¥–µ–ª–∫–∞—Ö

// –°–≤—è–∑—å —Å –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–æ–º –≤ Telegram
function contactCounterparty(username) {
    console.log('[DEBUG] –û—Ç–∫—Ä—ã—Ç–∏–µ —á–∞—Ç–∞ —Å –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–æ–º:', username);
    
    if (username) {
        const telegramUrl = `https://t.me/${username}`;
        
        if (tg && tg.openTelegramLink) {
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º Telegram WebApp API –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Å—Å—ã–ª–∫–∏
            tg.openTelegramLink(telegramUrl);
        } else {
            // –†–µ–∑–µ—Ä–≤–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç - –æ—Ç–∫—Ä—ã–≤–∞–µ–º –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ
            window.open(telegramUrl, '_blank');
        }
    } else {
        showAlert('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ username –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞');
    }
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ Telegram –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–ª—è –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ–≥–æ username –≤ –∑–∞—è–≤–∫–∞—Ö)
function openTelegramProfile(username) {
    console.log('[DEBUG] –û—Ç–∫—Ä—ã—Ç–∏–µ Telegram –ø—Ä–æ—Ñ–∏–ª—è:', username);
    
    if (username) {
        const telegramUrl = `https://t.me/${username}`;
        
        if (tg && tg.openTelegramLink) {
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º Telegram WebApp API –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Å—Å—ã–ª–∫–∏
            tg.openTelegramLink(telegramUrl);
        } else {
            // –†–µ–∑–µ—Ä–≤–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç - –æ—Ç–∫—Ä—ã–≤–∞–µ–º –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ
            window.open(telegramUrl, '_blank');
        }
    } else {
        showAlert('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    }
}

// –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç–∫–ª–∏–∫–æ–≤ –Ω–∞ –∑–∞—è–≤–∫—É
function viewOrderResponses(orderId) {
    console.log('[DEBUG] –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç–∫–ª–∏–∫–æ–≤ –Ω–∞ –∑–∞—è–≤–∫—É:', orderId);
    
    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Ä–∞–∑–¥–µ–ª –æ—Ç–∫–ª–∏–∫–æ–≤ –∏ —Ç–∞–± "–ù–∞ –º–æ–∏ –∑–∞—è–≤–∫–∏"
    const responsesTab = document.querySelector('[data-view="responses"]');
    if (responsesTab) {
        responsesTab.click(); // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Ä–∞–∑–¥–µ–ª "–û—Ç–∫–ª–∏–∫–∏"
        
        // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞, —á—Ç–æ–±—ã —Ä–∞–∑–¥–µ–ª —É—Å–ø–µ–ª –∑–∞–≥—Ä—É–∑–∏—Ç—å—Å—è
        setTimeout(() => {
            switchResponseTab('responses-to-my'); // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Ç–∞–± "–ù–∞ –º–æ–∏ –∑–∞—è–≤–∫–∏"
        }, 100);
    } else {
        showAlert('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–π—Ç–∏ –∫ –æ—Ç–∫–ª–∏–∫–∞–º');
    }
}



// –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞/–ø–æ–ª—É—á–µ–Ω–∏—è –≤ —Å–¥–µ–ª–∫–µ  
async function confirmPayment(dealId, isAuthor) {
    console.log('[DEBUG] –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–¥–µ–ª–∫–∏:', { dealId, isAuthor });
    
    if (!currentUser) {
        showAlert('‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è');
        return;
    }
    
    try {
        // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º —á–µ—Ä–µ–∑ API
        const result = await apiRequest(`/api/v1/deals/${dealId}/confirm`, 'POST', {
            is_author: isAuthor
        });
        
        if (result.success) {
            const message = isAuthor ? 
                '‚úÖ –í—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤!' : 
                '‚úÖ –í—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫—É —Å—Ä–µ–¥—Å—Ç–≤!';
            
            showAlert(message);
            
            // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–¥–µ–ª–∫–∏
            await loadActiveDeals();
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –ª–∏ —Å–¥–µ–ª–∫–∞
            if (result.deal_completed) {
                showAlert('üéâ –°–¥–µ–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\n–í—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –æ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–µ.');
                
                // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–µ—Ö–æ–¥ –∫ —Ñ–æ—Ä–º–µ –æ—Ç–∑—ã–≤–∞
                setTimeout(() => {
                    // switchResponseTab('completed-deals'); // –µ—Å–ª–∏ –±—É–¥–µ—Ç —Ç–∞–∫–æ–π —Ç–∞–±
                }, 2000);
            }
            
        } else {
            showAlert('‚ùå ' + (result.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ —Å–¥–µ–ª–∫–∏'));
        }
        
    } catch (error) {
        console.error('[ERROR] –û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏:', error);
        showAlert('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ —Å–¥–µ–ª–∫–∏');
    }
}

// =====================================================
// –§–£–ù–ö–¶–ò–ò –î–õ–Ø –†–ê–ë–û–¢–´ –° –û–¢–ó–´–í–ê–ú–ò
// =====================================================

// –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥–∞
let currentReviewRating = 0;

// –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞
function openReviewModal(dealId, toUserId, counterpartyName) {
    console.log('[DEBUG] –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –æ—Ç–∑—ã–≤–∞:', { dealId, toUserId, counterpartyName });
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–∫—Ä—ã—Ç—ã–µ –ø–æ–ª—è
    document.getElementById('reviewDealId').value = dealId;
    document.getElementById('reviewToUserId').value = toUserId;
    document.getElementById('reviewCounterpartyName').textContent = counterpartyName || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
    resetReviewForm();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    const modal = document.getElementById('reviewModal');
    modal.classList.add('show');
    document.body.classList.add('modal-open');
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∑–≤–µ–∑–¥–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥
    initializeStarRating();
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –æ—Ç–∑—ã–≤–∞
function closeReviewModal() {
    const modal = document.getElementById('reviewModal');
    modal.classList.remove('show');
    document.body.classList.remove('modal-open');
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏
    resetReviewForm();
}

// –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã –æ—Ç–∑—ã–≤–∞ –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é
function resetReviewForm() {
    // –û—á–∏—â–∞–µ–º —Ä–µ–π—Ç–∏–Ω–≥
    currentReviewRating = 0;
    document.getElementById('reviewRating').value = '';
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∑–≤–µ–∑–¥—ã
    const stars = document.querySelectorAll('#starRating .star');
    stars.forEach(star => {
        star.classList.remove('active', 'hovered', 'just-selected');
    });
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç —Ä–µ–π—Ç–∏–Ω–≥–∞
    document.getElementById('ratingValue').textContent = '–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ü–µ–Ω–∫—É –æ—Ç 1 –¥–æ 5 –∑–≤–µ–∑–¥';
    
    // –û—á–∏—â–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
    document.getElementById('reviewComment').value = '';
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —á–µ–∫–±–æ–∫—Å –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç–∏
    document.getElementById('reviewAnonymous').checked = false;
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–≤–µ–∑–¥–Ω–æ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥–∞
function initializeStarRating() {
    const stars = document.querySelectorAll('#starRating .star');
    
    stars.forEach((star, index) => {
        const rating = parseInt(star.getAttribute('data-rating'));
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∑–≤–µ–∑–¥–µ
        star.addEventListener('click', function() {
            selectStarRating(rating);
        });
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–≤–µ–¥–µ–Ω–∏—è –º—ã—à–∏
        star.addEventListener('mouseenter', function() {
            hoverStarRating(rating);
        });
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–∫–∏–¥–∞–Ω–∏—è –æ–±–ª–∞—Å—Ç–∏ –∑–≤–µ–∑–¥–Ω–æ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥–∞
    const starRating = document.getElementById('starRating');
    starRating.addEventListener('mouseleave', function() {
        clearHoverStarRating();
    });
}

// –í—ã–±–æ—Ä —Ä–µ–π—Ç–∏–Ω–≥–∞ –ø–æ –∑–≤–µ–∑–¥–∞–º
function selectStarRating(rating) {
    console.log('[DEBUG] –í—ã–±—Ä–∞–Ω —Ä–µ–π—Ç–∏–Ω–≥:', rating);
    
    currentReviewRating = rating;
    document.getElementById('reviewRating').value = rating;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–≤–µ–∑–¥
    updateStarsDisplay(rating, true);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Ä–µ–π—Ç–∏–Ω–≥–∞
    const ratingTexts = {
        1: '1 –∑–≤–µ–∑–¥–∞ - –û—á–µ–Ω—å –ø–ª–æ—Ö–æ',
        2: '2 –∑–≤–µ–∑–¥—ã - –ü–ª–æ—Ö–æ', 
        3: '3 –∑–≤–µ–∑–¥—ã - –ù–æ—Ä–º–∞–ª—å–Ω–æ',
        4: '4 –∑–≤–µ–∑–¥—ã - –•–æ—Ä–æ—à–æ',
        5: '5 –∑–≤–µ–∑–¥ - –û—Ç–ª–∏—á–Ω–æ'
    };
    
    document.getElementById('ratingValue').textContent = ratingTexts[rating];
    document.getElementById('ratingValue').style.color = rating >= 4 ? '#22c55e' : rating === 3 ? '#f59e0b' : '#ef4444';
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∑–≤–µ–∑–¥–µ
    const selectedStar = document.querySelector(`#starRating .star[data-rating="${rating}"]`);
    selectedStar.classList.add('just-selected');
    setTimeout(() => {
        selectedStar.classList.remove('just-selected');
    }, 300);
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ hover —ç—Ñ—Ñ–µ–∫—Ç–∞ –¥–ª—è –∑–≤–µ–∑–¥
function hoverStarRating(rating) {
    updateStarsDisplay(rating, false, true);
}

// –û—á–∏—Å—Ç–∫–∞ hover —ç—Ñ—Ñ–µ–∫—Ç–∞
function clearHoverStarRating() {
    updateStarsDisplay(currentReviewRating, true);
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–≤–µ–∑–¥
function updateStarsDisplay(rating, isSelected = false, isHovered = false) {
    const stars = document.querySelectorAll('#starRating .star');
    
    stars.forEach((star, index) => {
        const starRating = parseInt(star.getAttribute('data-rating'));
        
        // –£–¥–∞–ª—è–µ–º –≤—Å–µ –∫–ª–∞—Å—Å—ã
        star.classList.remove('active', 'hovered');
        
        if (starRating <= rating) {
            if (isSelected) {
                star.classList.add('active');
            } else if (isHovered) {
                star.classList.add('hovered');
            }
        }
    });
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã –æ—Ç–∑—ã–≤–∞
document.addEventListener('DOMContentLoaded', function() {
    const reviewForm = document.getElementById('reviewForm');
    if (reviewForm) {
        reviewForm.addEventListener('submit', handleReviewSubmit);
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –µ–≥–æ
    const reviewModal = document.getElementById('reviewModal');
    if (reviewModal) {
        reviewModal.addEventListener('click', function(e) {
            if (e.target === reviewModal) {
                closeReviewModal();
            }
        });
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–∑—ã–≤–∞
async function handleReviewSubmit(event) {
    event.preventDefault();
    
    console.log('[DEBUG] –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–∑—ã–≤–∞');
    
    if (!currentUser) {
        showAlert('‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è');
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
    const dealId = parseInt(document.getElementById('reviewDealId').value);
    const toUserId = parseInt(document.getElementById('reviewToUserId').value);
    const rating = currentReviewRating;
    
    if (!dealId || !toUserId || !rating) {
        showAlert('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è');
        return;
    }
    
    if (rating < 1 || rating > 5) {
        showAlert('‚ùå –†–µ–π—Ç–∏–Ω–≥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 1 –¥–æ 5 –∑–≤–µ–∑–¥');
        return;
    }
    
    // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
    const reviewData = {
        deal_id: dealId,
        to_user_id: toUserId,
        rating: rating,
        comment: document.getElementById('reviewComment').value.trim(),
        is_anonymous: document.getElementById('reviewAnonymous').checked
    };
    
    console.log('[DEBUG] –î–∞–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏:', reviewData);
    
    try {
        // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏
        const submitButton = document.querySelector('#reviewForm button[type="submit"]');
        const originalText = submitButton.textContent;
        submitButton.disabled = true;
        submitButton.textContent = '–û—Ç–ø—Ä–∞–≤–∫–∞...';
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–∑—ã–≤ —á–µ—Ä–µ–∑ API
        const result = await apiRequest('/api/v1/reviews', 'POST', reviewData);
        
        if (result.success) {
            showAlert('‚úÖ –û—Ç–∑—ã–≤ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!\n\n–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ –º–Ω–µ–Ω–∏–µ.');
            closeReviewModal();
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–¥–µ–ª–∫–∏
            await loadActiveDeals();
        } else {
            console.error('[ERROR] –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç–∑—ã–≤–∞:', result.message);
            showAlert('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–∑—ã–≤–∞: ' + (result.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'));
        }
        
    } catch (error) {
        console.error('[ERROR] –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–∑—ã–≤–∞:', error);
        showAlert('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–∑—ã–≤–∞');
    } finally {
        // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
        const submitButton = document.querySelector('#reviewForm button[type="submit"]');
        if (submitButton) {
            submitButton.disabled = false;
            submitButton.textContent = originalText;
        }
    }
}